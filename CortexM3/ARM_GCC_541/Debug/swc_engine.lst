ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_engine.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ENGINE_set_engine_run,"ax",%progbits
  20              		.align	2
  21              		.global	ENGINE_set_engine_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	ENGINE_set_engine_run, %function
  25              	ENGINE_set_engine_run:
  26              	.LFB154:
  27              		.file 1 "source\\asw\\swc_engine.c"
   1:source\asw/swc_engine.c **** /*
   2:source\asw/swc_engine.c ****  * Filename: swc_engine.c
   3:source\asw/swc_engine.c ****  *
   4:source\asw/swc_engine.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:source\asw/swc_engine.c ****  *
   6:source\asw/swc_engine.c ****  * description: SWC for engine
   7:source\asw/swc_engine.c ****  * name: swc_engine
   8:source\asw/swc_engine.c ****  * shortname: engine
   9:source\asw/swc_engine.c ****  *
  10:source\asw/swc_engine.c ****  */
  11:source\asw/swc_engine.c **** 
  12:source\asw/swc_engine.c **** #include "project.h"
  13:source\asw/swc_engine.c **** #include "global.h"
  14:source\asw/swc_engine.c **** #include "rte.h"
  15:source\asw/swc_engine.c **** #include "rte_types.h"
  16:source\asw/swc_engine.c **** #include "swc_engine.h"
  17:source\asw/swc_engine.c **** 
  18:source\asw/swc_engine.c **** 
  19:source\asw/swc_engine.c **** 
  20:source\asw/swc_engine.c **** /* USER CODE START SWC_ENGINE_INCLUDE */
  21:source\asw/swc_engine.c **** 
  22:source\asw/swc_engine.c **** /* USER CODE END SWC_ENGINE_INCLUDE */
  23:source\asw/swc_engine.c **** 
  24:source\asw/swc_engine.c **** 
  25:source\asw/swc_engine.c **** #include "sp_common.h"
  26:source\asw/swc_engine.c **** 
  27:source\asw/swc_engine.c **** /* USER CODE START SWC_ENGINE_USERDEFINITIONS */
  28:source\asw/swc_engine.c **** 
  29:source\asw/swc_engine.c **** /* USER CODE END SWC_ENGINE_USERDEFINITIONS */
  30:source\asw/swc_engine.c **** 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 2


  31:source\asw/swc_engine.c **** 
  32:source\asw/swc_engine.c **** 
  33:source\asw/swc_engine.c **** /*
  34:source\asw/swc_engine.c ****  * component: swc_engine
  35:source\asw/swc_engine.c ****  * cycletime: 100
  36:source\asw/swc_engine.c ****  * description: Runnable to copy incoming speed signal to engine and call pushPort()
  37:source\asw/swc_engine.c ****  * events: 
  38:source\asw/swc_engine.c ****  * name: ENGINE_set_engine_run
  39:source\asw/swc_engine.c ****  * shortname: set_engine
  40:source\asw/swc_engine.c ****  * signalIN: so_speed
  41:source\asw/swc_engine.c ****  * signalOUT: so_engine
  42:source\asw/swc_engine.c ****  * task: tsk_io
  43:source\asw/swc_engine.c ****  */
  44:source\asw/swc_engine.c **** void ENGINE_set_engine_run(RTE_event ev){
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  45:source\asw/swc_engine.c **** 	
  46:source\asw/swc_engine.c **** 	/* USER CODE START ENGINE_set_engine_run */
  47:source\asw/swc_engine.c **** 
  48:source\asw/swc_engine.c ****     SC_SPEED_data_t speed = SC_SPEED_INIT_DATA;
  39              		.loc 1 48 0
  40 0002 0023     		movs	r3, #0
  41 0004 1946     		mov	r1, r3
  42              	.LVL1:
  43              	.LBB13:
  44              	.LBB14:
  45              		.file 2 ".\\source\\rte/sc_speed.h"
   1:.\source\rte/sc_speed.h **** 
   2:.\source\rte/sc_speed.h **** 
   3:.\source\rte/sc_speed.h **** /**
   4:.\source\rte/sc_speed.h ****  *  file    SC_SPEED_signal.h
   5:.\source\rte/sc_speed.h ****  *
   6:.\source\rte/sc_speed.h ****  *  brief   signal base class for signal sc_speed
   7:.\source\rte/sc_speed.h ****  *
   8:.\source\rte/sc_speed.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_speed.h ****  *
  10:.\source\rte/sc_speed.h ****  * description: Signalclass representing speed
  11:.\source\rte/sc_speed.h ****  * name: sc_speed
  12:.\source\rte/sc_speed.h ****  * shortname: speed
  13:.\source\rte/sc_speed.h ****  *
  14:.\source\rte/sc_speed.h ****  */
  15:.\source\rte/sc_speed.h **** 
  16:.\source\rte/sc_speed.h **** 
  17:.\source\rte/sc_speed.h **** 
  18:.\source\rte/sc_speed.h **** #ifndef SC_SPEED_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_speed.h **** #define SC_SPEED_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_speed.h **** 
  21:.\source\rte/sc_speed.h **** /*================================================[ public includes  ]=============================
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 3


  22:.\source\rte/sc_speed.h **** #include "global.h"
  23:.\source\rte/sc_speed.h **** #include "project.h"
  24:.\source\rte/sc_speed.h **** #include "rte.h"
  25:.\source\rte/sc_speed.h **** #include "rte_types.h"
  26:.\source\rte/sc_speed.h **** 
  27:.\source\rte/sc_speed.h **** #include "sc_speed_type.h"
  28:.\source\rte/sc_speed.h **** 
  29:.\source\rte/sc_speed.h **** 
  30:.\source\rte/sc_speed.h **** /**************************************************************************************************
  31:.\source\rte/sc_speed.h **** /* The driver API block																						*/
  32:.\source\rte/sc_speed.h **** /**************************************************************************************************
  33:.\source\rte/sc_speed.h ****                                                                                                    
  34:.\source\rte/sc_speed.h **** /**
  35:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_speed.h ****  *  I-Port
  37:.\source\rte/sc_speed.h ****  */
  38:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverIn_t)(SC_SPEED_data_t * const);
  39:.\source\rte/sc_speed.h **** 
  40:.\source\rte/sc_speed.h **** /**
  41:.\source\rte/sc_speed.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_speed.h ****  *  O-Port
  43:.\source\rte/sc_speed.h ****  */
  44:.\source\rte/sc_speed.h **** typedef RC_t (*SC_SPEED_driverOut_t)( const SC_SPEED_data_t * const);
  45:.\source\rte/sc_speed.h **** 
  46:.\source\rte/sc_speed.h **** 
  47:.\source\rte/sc_speed.h **** /**************************************************************************************************
  48:.\source\rte/sc_speed.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_speed.h **** /**************************************************************************************************
  50:.\source\rte/sc_speed.h **** 
  51:.\source\rte/sc_speed.h **** /**
  52:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_speed.h ****  */
  54:.\source\rte/sc_speed.h **** struct SC_SPEED_cfg_s
  55:.\source\rte/sc_speed.h **** {
  56:.\source\rte/sc_speed.h ****     /**
  57:.\source\rte/sc_speed.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_speed.h ****      */
  59:.\source\rte/sc_speed.h ****     SC_SPEED_driverIn_t const inDriver;
  60:.\source\rte/sc_speed.h **** 
  61:.\source\rte/sc_speed.h ****     /**
  62:.\source\rte/sc_speed.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_speed.h ****      */
  64:.\source\rte/sc_speed.h ****    SC_SPEED_driverOut_t const outDriver;
  65:.\source\rte/sc_speed.h ****    
  66:.\source\rte/sc_speed.h ****     /**
  67:.\source\rte/sc_speed.h ****      * Event onUpdate
  68:.\source\rte/sc_speed.h ****      */
  69:.\source\rte/sc_speed.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_speed.h ****     
  71:.\source\rte/sc_speed.h ****     
  72:.\source\rte/sc_speed.h ****     /**
  73:.\source\rte/sc_speed.h ****      * Event onError
  74:.\source\rte/sc_speed.h ****      */
  75:.\source\rte/sc_speed.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_speed.h ****     
  77:.\source\rte/sc_speed.h ****     /**
  78:.\source\rte/sc_speed.h ****      * Task Count onUpdate
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 4


  79:.\source\rte/sc_speed.h ****      */
  80:.\source\rte/sc_speed.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_speed.h **** 
  82:.\source\rte/sc_speed.h ****     /**
  83:.\source\rte/sc_speed.h ****      * Task List onUpdate
  84:.\source\rte/sc_speed.h ****      */
  85:.\source\rte/sc_speed.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_speed.h ****     
  87:.\source\rte/sc_speed.h ****     /**
  88:.\source\rte/sc_speed.h ****      * Task Count onError
  89:.\source\rte/sc_speed.h ****      */
  90:.\source\rte/sc_speed.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_speed.h **** 
  92:.\source\rte/sc_speed.h ****     /**
  93:.\source\rte/sc_speed.h ****      * Task List onError
  94:.\source\rte/sc_speed.h ****      */
  95:.\source\rte/sc_speed.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_speed.h **** 	
  97:.\source\rte/sc_speed.h **** 	
  98:.\source\rte/sc_speed.h **** 	/**
  99:.\source\rte/sc_speed.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_speed.h **** 	 */
 101:.\source\rte/sc_speed.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_speed.h **** 	 
 103:.\source\rte/sc_speed.h **** 	/**
 104:.\source\rte/sc_speed.h **** 	 * Ressourse 
 105:.\source\rte/sc_speed.h **** 	 */
 106:.\source\rte/sc_speed.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_speed.h **** 
 108:.\source\rte/sc_speed.h **** };                                                                                                 
 109:.\source\rte/sc_speed.h **** typedef const struct SC_SPEED_cfg_s SC_SPEED_cfg_t;
 110:.\source\rte/sc_speed.h ****                               
 111:.\source\rte/sc_speed.h **** /**************************************************************************************************
 112:.\source\rte/sc_speed.h **** /* The data interface block																							*/
 113:.\source\rte/sc_speed.h **** /**************************************************************************************************
 114:.\source\rte/sc_speed.h **** 
 115:.\source\rte/sc_speed.h ****                                                                                                    
 116:.\source\rte/sc_speed.h **** 							  
 117:.\source\rte/sc_speed.h **** /**
 118:.\source\rte/sc_speed.h ****  * Instances of the struct SC_SPEED_t represent the signal objects.
 119:.\source\rte/sc_speed.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_speed.h ****  */
 121:.\source\rte/sc_speed.h **** struct SC_SPEED_s
 122:.\source\rte/sc_speed.h **** {                                                                                                  
 123:.\source\rte/sc_speed.h **** 
 124:.\source\rte/sc_speed.h **** 	/**
 125:.\source\rte/sc_speed.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_speed.h **** 	 */
 127:.\source\rte/sc_speed.h ****     SC_SPEED_data_t value;
 128:.\source\rte/sc_speed.h **** 
 129:.\source\rte/sc_speed.h ****     /**
 130:.\source\rte/sc_speed.h ****      * Current signal status
 131:.\source\rte/sc_speed.h ****      */
 132:.\source\rte/sc_speed.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_speed.h **** 
 134:.\source\rte/sc_speed.h ****     /**
 135:.\source\rte/sc_speed.h ****      * Current age of the signal (in calling cycles)
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 5


 136:.\source\rte/sc_speed.h ****      */
 137:.\source\rte/sc_speed.h ****     uint32_t age;
 138:.\source\rte/sc_speed.h **** 
 139:.\source\rte/sc_speed.h ****     /**
 140:.\source\rte/sc_speed.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_speed.h ****      */
 142:.\source\rte/sc_speed.h **** 	const SC_SPEED_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_speed.h **** 
 144:.\source\rte/sc_speed.h **** };                                                                                                 
 145:.\source\rte/sc_speed.h **** typedef struct SC_SPEED_s SC_SPEED_t;
 146:.\source\rte/sc_speed.h **** 
 147:.\source\rte/sc_speed.h **** /**************************************************************************************************
 148:.\source\rte/sc_speed.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_speed.h **** /**************************************************************************************************
 150:.\source\rte/sc_speed.h **** 
 151:.\source\rte/sc_speed.h **** /**
 152:.\source\rte/sc_speed.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_speed.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_speed.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_speed.h ****  *
 156:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_speed.h ****  *
 159:.\source\rte/sc_speed.h ****  **/
 160:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_init( SC_SPEED_t * const signal )
 161:.\source\rte/sc_speed.h **** {                                                                                                  
 162:.\source\rte/sc_speed.h **** 
 163:.\source\rte/sc_speed.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_speed.h **** 
 165:.\source\rte/sc_speed.h ****    //Set value and raw value
 166:.\source\rte/sc_speed.h ****    signal->value  = SC_SPEED_INIT_DATA;
 167:.\source\rte/sc_speed.h ****    signal->age    = 0;
 168:.\source\rte/sc_speed.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_speed.h **** 
 170:.\source\rte/sc_speed.h ****    return ret;
 171:.\source\rte/sc_speed.h **** }
 172:.\source\rte/sc_speed.h **** 
 173:.\source\rte/sc_speed.h **** /**************************************************************************************************
 174:.\source\rte/sc_speed.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_speed.h **** /**************************************************************************************************
 176:.\source\rte/sc_speed.h **** 
 177:.\source\rte/sc_speed.h **** /**
 178:.\source\rte/sc_speed.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_speed.h ****  *
 180:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_speed.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_speed.h ****  *
 183:.\source\rte/sc_speed.h ****  **/
 184:.\source\rte/sc_speed.h **** inline RTE_signalStatus_t RTE_SC_SPEED_getStatus( const SC_SPEED_t * const signal )
 185:.\source\rte/sc_speed.h **** {
 186:.\source\rte/sc_speed.h ****    return signal->status;
  46              		.loc 2 186 0
  47 0006 184A     		ldr	r2, .L10
  48 0008 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
  49              	.LVL2:
  50              	.LBE14:
  51              	.LBE13:
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 6


  49:source\asw/swc_engine.c ****     static uint32_t speed_age = 0;
  50:source\asw/swc_engine.c ****     SC_ENGINE_data_t engine = SC_ENGINE_INIT_DATA;
  51:source\asw/swc_engine.c ****     
  52:source\asw/swc_engine.c ****     if(RTE_SC_SPEED_getStatus(&SO_SPEED_signal) == RTE_SIGNALSTATUS_VALID)
  52              		.loc 1 52 0
  53 000a 022A     		cmp	r2, #2
  54 000c 01D1     		bne	.L2
  55              	.LVL3:
  53:source\asw/swc_engine.c ****     {
  54:source\asw/swc_engine.c ****         speed.speed_value = RTE_SC_SPEED_get(&SO_SPEED_signal).speed_value;
  56              		.loc 1 54 0
  57 000e 164A     		ldr	r2, .L10
  58 0010 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
  59              	.L2:
  60              	.LVL4:
  61              	.LBB15:
  62              	.LBB16:
 187:.\source\rte/sc_speed.h **** }
 188:.\source\rte/sc_speed.h **** 
 189:.\source\rte/sc_speed.h **** 
 190:.\source\rte/sc_speed.h **** /**
 191:.\source\rte/sc_speed.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_speed.h ****  *
 193:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_speed.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_speed.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_speed.h ****  *
 197:.\source\rte/sc_speed.h ****  */
 198:.\source\rte/sc_speed.h **** inline RC_t RTE_SC_SPEED_setStatus( SC_SPEED_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_speed.h **** {
 200:.\source\rte/sc_speed.h ****    signal->status = status;
 201:.\source\rte/sc_speed.h ****    size_t taskNum=0;
 202:.\source\rte/sc_speed.h ****    
 203:.\source\rte/sc_speed.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_speed.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_speed.h ****    {
 206:.\source\rte/sc_speed.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_speed.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_speed.h **** 
 209:.\source\rte/sc_speed.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_speed.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_speed.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_speed.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_speed.h **** 			}
 214:.\source\rte/sc_speed.h **** 		}
 215:.\source\rte/sc_speed.h ****    }
 216:.\source\rte/sc_speed.h ****    
 217:.\source\rte/sc_speed.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_speed.h **** }
 219:.\source\rte/sc_speed.h **** 
 220:.\source\rte/sc_speed.h **** 
 221:.\source\rte/sc_speed.h **** /**
 222:.\source\rte/sc_speed.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_speed.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_speed.h ****  *
 225:.\source\rte/sc_speed.h ****  * @param  SC_SPEED_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_speed.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 7


 227:.\source\rte/sc_speed.h ****  */
 228:.\source\rte/sc_speed.h **** inline uint32_t RTE_SC_SPEED_getAge( const SC_SPEED_t * const signal )
 229:.\source\rte/sc_speed.h **** {
 230:.\source\rte/sc_speed.h ****    return signal->age;
  63              		.loc 2 230 0
  64 0012 154A     		ldr	r2, .L10
  65 0014 5268     		ldr	r2, [r2, #4]
  66              	.LVL5:
  67              	.LBE16:
  68              	.LBE15:
  55:source\asw/swc_engine.c ****     }
  56:source\asw/swc_engine.c ****     
  57:source\asw/swc_engine.c ****     speed_age = RTE_SC_SPEED_getAge(&SO_SPEED_signal);
  58:source\asw/swc_engine.c ****     if(speed_age < 100)
  69              		.loc 1 58 0
  70 0016 632A     		cmp	r2, #99
  71 0018 00D8     		bhi	.L3
  72              	.LVL6:
  59:source\asw/swc_engine.c ****     {
  60:source\asw/swc_engine.c ****         engine.engine_value = speed.speed_value;
  73              		.loc 1 60 0
  74 001a 0B46     		mov	r3, r1
  75              	.LVL7:
  76              	.L3:
  77              	.LBB17:
  78              	.LBB18:
  79              		.file 3 ".\\source\\rte/sc_engine.h"
   1:.\source\rte/sc_engine.h **** 
   2:.\source\rte/sc_engine.h **** 
   3:.\source\rte/sc_engine.h **** /**
   4:.\source\rte/sc_engine.h ****  *  file    SC_ENGINE_signal.h
   5:.\source\rte/sc_engine.h ****  *
   6:.\source\rte/sc_engine.h ****  *  brief   signal base class for signal sc_engine
   7:.\source\rte/sc_engine.h ****  *
   8:.\source\rte/sc_engine.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_engine.h ****  *
  10:.\source\rte/sc_engine.h ****  * description: Signalclass representing engine
  11:.\source\rte/sc_engine.h ****  * name: sc_engine
  12:.\source\rte/sc_engine.h ****  * shortname: engine
  13:.\source\rte/sc_engine.h ****  *
  14:.\source\rte/sc_engine.h ****  */
  15:.\source\rte/sc_engine.h **** 
  16:.\source\rte/sc_engine.h **** 
  17:.\source\rte/sc_engine.h **** 
  18:.\source\rte/sc_engine.h **** #ifndef SC_ENGINE_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_engine.h **** #define SC_ENGINE_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_engine.h **** 
  21:.\source\rte/sc_engine.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_engine.h **** #include "global.h"
  23:.\source\rte/sc_engine.h **** #include "project.h"
  24:.\source\rte/sc_engine.h **** #include "rte.h"
  25:.\source\rte/sc_engine.h **** #include "rte_types.h"
  26:.\source\rte/sc_engine.h **** 
  27:.\source\rte/sc_engine.h **** #include "sc_engine_type.h"
  28:.\source\rte/sc_engine.h **** 
  29:.\source\rte/sc_engine.h **** 
  30:.\source\rte/sc_engine.h **** /**************************************************************************************************
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 8


  31:.\source\rte/sc_engine.h **** /* The driver API block																						*/
  32:.\source\rte/sc_engine.h **** /**************************************************************************************************
  33:.\source\rte/sc_engine.h ****                                                                                                    
  34:.\source\rte/sc_engine.h **** /**
  35:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_engine.h ****  *  I-Port
  37:.\source\rte/sc_engine.h ****  */
  38:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverIn_t)(SC_ENGINE_data_t * const);
  39:.\source\rte/sc_engine.h **** 
  40:.\source\rte/sc_engine.h **** /**
  41:.\source\rte/sc_engine.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_engine.h ****  *  O-Port
  43:.\source\rte/sc_engine.h ****  */
  44:.\source\rte/sc_engine.h **** typedef RC_t (*SC_ENGINE_driverOut_t)( const SC_ENGINE_data_t * const);
  45:.\source\rte/sc_engine.h **** 
  46:.\source\rte/sc_engine.h **** 
  47:.\source\rte/sc_engine.h **** /**************************************************************************************************
  48:.\source\rte/sc_engine.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_engine.h **** /**************************************************************************************************
  50:.\source\rte/sc_engine.h **** 
  51:.\source\rte/sc_engine.h **** /**
  52:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_engine.h ****  */
  54:.\source\rte/sc_engine.h **** struct SC_ENGINE_cfg_s
  55:.\source\rte/sc_engine.h **** {
  56:.\source\rte/sc_engine.h ****     /**
  57:.\source\rte/sc_engine.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_engine.h ****      */
  59:.\source\rte/sc_engine.h ****     SC_ENGINE_driverIn_t const inDriver;
  60:.\source\rte/sc_engine.h **** 
  61:.\source\rte/sc_engine.h ****     /**
  62:.\source\rte/sc_engine.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_engine.h ****      */
  64:.\source\rte/sc_engine.h ****    SC_ENGINE_driverOut_t const outDriver;
  65:.\source\rte/sc_engine.h ****    
  66:.\source\rte/sc_engine.h ****     /**
  67:.\source\rte/sc_engine.h ****      * Event onUpdate
  68:.\source\rte/sc_engine.h ****      */
  69:.\source\rte/sc_engine.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_engine.h ****     
  71:.\source\rte/sc_engine.h ****     
  72:.\source\rte/sc_engine.h ****     /**
  73:.\source\rte/sc_engine.h ****      * Event onError
  74:.\source\rte/sc_engine.h ****      */
  75:.\source\rte/sc_engine.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_engine.h ****     
  77:.\source\rte/sc_engine.h ****     /**
  78:.\source\rte/sc_engine.h ****      * Task Count onUpdate
  79:.\source\rte/sc_engine.h ****      */
  80:.\source\rte/sc_engine.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_engine.h **** 
  82:.\source\rte/sc_engine.h ****     /**
  83:.\source\rte/sc_engine.h ****      * Task List onUpdate
  84:.\source\rte/sc_engine.h ****      */
  85:.\source\rte/sc_engine.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_engine.h ****     
  87:.\source\rte/sc_engine.h ****     /**
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 9


  88:.\source\rte/sc_engine.h ****      * Task Count onError
  89:.\source\rte/sc_engine.h ****      */
  90:.\source\rte/sc_engine.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_engine.h **** 
  92:.\source\rte/sc_engine.h ****     /**
  93:.\source\rte/sc_engine.h ****      * Task List onError
  94:.\source\rte/sc_engine.h ****      */
  95:.\source\rte/sc_engine.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_engine.h **** 	
  97:.\source\rte/sc_engine.h **** 	
  98:.\source\rte/sc_engine.h **** 	/**
  99:.\source\rte/sc_engine.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_engine.h **** 	 */
 101:.\source\rte/sc_engine.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_engine.h **** 	 
 103:.\source\rte/sc_engine.h **** 	/**
 104:.\source\rte/sc_engine.h **** 	 * Ressourse 
 105:.\source\rte/sc_engine.h **** 	 */
 106:.\source\rte/sc_engine.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_engine.h **** 
 108:.\source\rte/sc_engine.h **** };                                                                                                 
 109:.\source\rte/sc_engine.h **** typedef const struct SC_ENGINE_cfg_s SC_ENGINE_cfg_t;
 110:.\source\rte/sc_engine.h ****                               
 111:.\source\rte/sc_engine.h **** /**************************************************************************************************
 112:.\source\rte/sc_engine.h **** /* The data interface block																							*/
 113:.\source\rte/sc_engine.h **** /**************************************************************************************************
 114:.\source\rte/sc_engine.h **** 
 115:.\source\rte/sc_engine.h ****                                                                                                    
 116:.\source\rte/sc_engine.h **** 							  
 117:.\source\rte/sc_engine.h **** /**
 118:.\source\rte/sc_engine.h ****  * Instances of the struct SC_ENGINE_t represent the signal objects.
 119:.\source\rte/sc_engine.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_engine.h ****  */
 121:.\source\rte/sc_engine.h **** struct SC_ENGINE_s
 122:.\source\rte/sc_engine.h **** {                                                                                                  
 123:.\source\rte/sc_engine.h **** 
 124:.\source\rte/sc_engine.h **** 	/**
 125:.\source\rte/sc_engine.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_engine.h **** 	 */
 127:.\source\rte/sc_engine.h ****     SC_ENGINE_data_t value;
 128:.\source\rte/sc_engine.h **** 
 129:.\source\rte/sc_engine.h ****     /**
 130:.\source\rte/sc_engine.h ****      * Current signal status
 131:.\source\rte/sc_engine.h ****      */
 132:.\source\rte/sc_engine.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_engine.h **** 
 134:.\source\rte/sc_engine.h ****     /**
 135:.\source\rte/sc_engine.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_engine.h ****      */
 137:.\source\rte/sc_engine.h ****     uint32_t age;
 138:.\source\rte/sc_engine.h **** 
 139:.\source\rte/sc_engine.h ****     /**
 140:.\source\rte/sc_engine.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_engine.h ****      */
 142:.\source\rte/sc_engine.h **** 	const SC_ENGINE_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_engine.h **** 
 144:.\source\rte/sc_engine.h **** };                                                                                                 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 10


 145:.\source\rte/sc_engine.h **** typedef struct SC_ENGINE_s SC_ENGINE_t;
 146:.\source\rte/sc_engine.h **** 
 147:.\source\rte/sc_engine.h **** /**************************************************************************************************
 148:.\source\rte/sc_engine.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_engine.h **** /**************************************************************************************************
 150:.\source\rte/sc_engine.h **** 
 151:.\source\rte/sc_engine.h **** /**
 152:.\source\rte/sc_engine.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_engine.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_engine.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_engine.h ****  *
 156:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_engine.h ****  *
 159:.\source\rte/sc_engine.h ****  **/
 160:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_init( SC_ENGINE_t * const signal )
 161:.\source\rte/sc_engine.h **** {                                                                                                  
 162:.\source\rte/sc_engine.h **** 
 163:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_engine.h **** 
 165:.\source\rte/sc_engine.h ****    //Set value and raw value
 166:.\source\rte/sc_engine.h ****    signal->value  = SC_ENGINE_INIT_DATA;
 167:.\source\rte/sc_engine.h ****    signal->age    = 0;
 168:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_engine.h **** 
 170:.\source\rte/sc_engine.h ****    return ret;
 171:.\source\rte/sc_engine.h **** }
 172:.\source\rte/sc_engine.h **** 
 173:.\source\rte/sc_engine.h **** /**************************************************************************************************
 174:.\source\rte/sc_engine.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_engine.h **** /**************************************************************************************************
 176:.\source\rte/sc_engine.h **** 
 177:.\source\rte/sc_engine.h **** /**
 178:.\source\rte/sc_engine.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_engine.h ****  *
 180:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_engine.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_engine.h ****  *
 183:.\source\rte/sc_engine.h ****  **/
 184:.\source\rte/sc_engine.h **** inline RTE_signalStatus_t RTE_SC_ENGINE_getStatus( const SC_ENGINE_t * const signal )
 185:.\source\rte/sc_engine.h **** {
 186:.\source\rte/sc_engine.h ****    return signal->status;
 187:.\source\rte/sc_engine.h **** }
 188:.\source\rte/sc_engine.h **** 
 189:.\source\rte/sc_engine.h **** 
 190:.\source\rte/sc_engine.h **** /**
 191:.\source\rte/sc_engine.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_engine.h ****  *
 193:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_engine.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_engine.h ****  *
 197:.\source\rte/sc_engine.h ****  */
 198:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_setStatus( SC_ENGINE_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_engine.h **** {
 200:.\source\rte/sc_engine.h ****    signal->status = status;
 201:.\source\rte/sc_engine.h ****    size_t taskNum=0;
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 11


 202:.\source\rte/sc_engine.h ****    
 203:.\source\rte/sc_engine.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_engine.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_engine.h ****    {
 206:.\source\rte/sc_engine.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_engine.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_engine.h **** 
 209:.\source\rte/sc_engine.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_engine.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_engine.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_engine.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_engine.h **** 			}
 214:.\source\rte/sc_engine.h **** 		}
 215:.\source\rte/sc_engine.h ****    }
 216:.\source\rte/sc_engine.h ****    
 217:.\source\rte/sc_engine.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_engine.h **** }
 219:.\source\rte/sc_engine.h **** 
 220:.\source\rte/sc_engine.h **** 
 221:.\source\rte/sc_engine.h **** /**
 222:.\source\rte/sc_engine.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_engine.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_engine.h ****  *
 225:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_engine.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_engine.h ****  */
 228:.\source\rte/sc_engine.h **** inline uint32_t RTE_SC_ENGINE_getAge( const SC_ENGINE_t * const signal )
 229:.\source\rte/sc_engine.h **** {
 230:.\source\rte/sc_engine.h ****    return signal->age;
 231:.\source\rte/sc_engine.h **** }
 232:.\source\rte/sc_engine.h **** 
 233:.\source\rte/sc_engine.h **** /**
 234:.\source\rte/sc_engine.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_engine.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_engine.h ****  * @return void
 238:.\source\rte/sc_engine.h ****  */
 239:.\source\rte/sc_engine.h **** inline void RTE_SC_ENGINE_incAge(  SC_ENGINE_t * const signal , uint32_t increment)
 240:.\source\rte/sc_engine.h **** {
 241:.\source\rte/sc_engine.h **** 	   //Hack....
 242:.\source\rte/sc_engine.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_engine.h **** 	   {
 244:.\source\rte/sc_engine.h **** 	      signal->age += increment;
 245:.\source\rte/sc_engine.h **** 	   }
 246:.\source\rte/sc_engine.h **** }
 247:.\source\rte/sc_engine.h **** 
 248:.\source\rte/sc_engine.h **** 
 249:.\source\rte/sc_engine.h **** /**************************************************************************************************
 250:.\source\rte/sc_engine.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_engine.h **** /**************************************************************************************************
 252:.\source\rte/sc_engine.h **** 
 253:.\source\rte/sc_engine.h **** /**
 254:.\source\rte/sc_engine.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_engine.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_engine.h ****  *
 257:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t*: pointer to the current value of the application data buffer
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 12


 259:.\source\rte/sc_engine.h ****  *
 260:.\source\rte/sc_engine.h ****  **/
 261:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t* RTE_SC_ENGINE_getPtr( SC_ENGINE_t * const signal )
 262:.\source\rte/sc_engine.h **** {               
 263:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_engine.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_engine.h **** }
 266:.\source\rte/sc_engine.h **** 
 267:.\source\rte/sc_engine.h **** /**
 268:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_engine.h ****  *
 270:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_engine.h ****  * @return sc_engine_data_t: current value of the application data buffer
 272:.\source\rte/sc_engine.h ****  *
 273:.\source\rte/sc_engine.h ****  **/
 274:.\source\rte/sc_engine.h **** inline SC_ENGINE_data_t RTE_SC_ENGINE_get( const SC_ENGINE_t * const signal )
 275:.\source\rte/sc_engine.h **** {               
 276:.\source\rte/sc_engine.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_engine.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_engine.h **** }                                                                                                  
 279:.\source\rte/sc_engine.h ****                                                                                                    
 280:.\source\rte/sc_engine.h **** /**
 281:.\source\rte/sc_engine.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_engine.h ****  *
 283:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_engine.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_engine.h ****  *
 287:.\source\rte/sc_engine.h ****  **/
 288:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_getThreadSafe( const SC_ENGINE_t * const signal, SC_ENGINE_data_t * const
 289:.\source\rte/sc_engine.h **** {    
 290:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_engine.h ****    *data = signal->value;
 292:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_engine.h **** 
 294:.\source\rte/sc_engine.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_engine.h ****    
 296:.\source\rte/sc_engine.h **** }                                                                                                  
 297:.\source\rte/sc_engine.h ****                                                                                                    
 298:.\source\rte/sc_engine.h **** /**
 299:.\source\rte/sc_engine.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_engine.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_engine.h ****  * signal specific scaling function.
 302:.\source\rte/sc_engine.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_engine.h ****  *
 304:.\source\rte/sc_engine.h ****  * @param  SC_ENGINE_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_engine.h ****  * @param  sc_engine_data_t const value: value for the application data buffer
 306:.\source\rte/sc_engine.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_engine.h ****  *
 308:.\source\rte/sc_engine.h ****  **/
 309:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_set(SC_ENGINE_t * const signal, const SC_ENGINE_data_t value  )
 310:.\source\rte/sc_engine.h **** {
 311:.\source\rte/sc_engine.h **** 
 312:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_engine.h ****    size_t taskNum=0;
 314:.\source\rte/sc_engine.h **** 
 315:.\source\rte/sc_engine.h **** 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 13


 316:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
  80              		.loc 3 316 0
  81 001c 134A     		ldr	r2, .L10+4
  82 001e 9168     		ldr	r1, [r2, #8]
  83              	.LVL8:
 317:.\source\rte/sc_engine.h ****    signal->value  = value;
  84              		.loc 3 317 0
  85 0020 1370     		strb	r3, [r2]
 318:.\source\rte/sc_engine.h ****    signal->age    = 0;
  86              		.loc 3 318 0
  87 0022 0023     		movs	r3, #0
  88              	.LVL9:
  89 0024 5360     		str	r3, [r2, #4]
 319:.\source\rte/sc_engine.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
  90              		.loc 3 319 0
  91 0026 0223     		movs	r3, #2
  92 0028 5370     		strb	r3, [r2, #1]
 320:.\source\rte/sc_engine.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\source\rte/sc_engine.h **** 
 322:.\source\rte/sc_engine.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_engine.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
  93              		.loc 3 323 0
  94 002a 4D69     		ldr	r5, [r1, #20]
  95              	.LVL10:
 324:.\source\rte/sc_engine.h **** 
 325:.\source\rte/sc_engine.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
  96              		.loc 3 325 0
  97 002c 8B68     		ldr	r3, [r1, #8]
  98 002e 73B1     		cbz	r3, .L4
  99 0030 3DB9     		cbnz	r5, .L8
 100 0032 0CE0     		b	.L4
 101              	.LVL11:
 102              	.L6:
 103              	.LBB19:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_engine.h **** 		  
 328:.\source\rte/sc_engine.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_engine.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 104              		.loc 3 329 0
 105 0034 9968     		ldr	r1, [r3, #8]
 106 0036 55F82400 		ldr	r0, [r5, r4, lsl #2]
 107 003a FFF7FEFF 		bl	EE_oo_SetEvent
 108              	.LVL12:
 109              	.LBE19:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 110              		.loc 3 326 0
 111 003e 0134     		adds	r4, r4, #1
 112              	.LVL13:
 113 0040 00E0     		b	.L5
 114              	.LVL14:
 115              	.L8:
 325:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 116              		.loc 3 325 0
 117 0042 0024     		movs	r4, #0
 118              	.LVL15:
 119              	.L5:
 326:.\source\rte/sc_engine.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 14


 120              		.loc 3 326 0
 121 0044 094B     		ldr	r3, .L10+4
 122 0046 9B68     		ldr	r3, [r3, #8]
 123 0048 1A69     		ldr	r2, [r3, #16]
 124 004a 9442     		cmp	r4, r2
 125 004c F2D3     		bcc	.L6
 126              	.LVL16:
 127              	.L4:
 128              	.LBE18:
 129              	.LBE17:
 130              	.LBB20:
 131              	.LBB21:
 330:.\source\rte/sc_engine.h ****       }
 331:.\source\rte/sc_engine.h ****    }
 332:.\source\rte/sc_engine.h **** 
 333:.\source\rte/sc_engine.h ****    return ret;
 334:.\source\rte/sc_engine.h **** }                                                                                                  
 335:.\source\rte/sc_engine.h ****                                                                                                    
 336:.\source\rte/sc_engine.h ****                                                                                                    
 337:.\source\rte/sc_engine.h **** /**************************************************************************************************
 338:.\source\rte/sc_engine.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_engine.h **** /**************************************************************************************************
 340:.\source\rte/sc_engine.h **** 
 341:.\source\rte/sc_engine.h ****                                                                                                    
 342:.\source\rte/sc_engine.h **** /**
 343:.\source\rte/sc_engine.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_engine.h ****  *
 345:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_engine.h ****  *
 348:.\source\rte/sc_engine.h ****  */
 349:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pullPort( SC_ENGINE_t * const signal )
 350:.\source\rte/sc_engine.h **** {                                                                                                  
 351:.\source\rte/sc_engine.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_engine.h **** 
 353:.\source\rte/sc_engine.h ****                                                                                                    
 354:.\source\rte/sc_engine.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_engine.h ****    {
 356:.\source\rte/sc_engine.h **** 	  SC_ENGINE_data_t value = signal->value;
 357:.\source\rte/sc_engine.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_engine.h ****                                                                                                    
 359:.\source\rte/sc_engine.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_engine.h ****       {
 361:.\source\rte/sc_engine.h ****     	  //Critical Section
 362:.\source\rte/sc_engine.h ****     	  RTE_SC_ENGINE_set(signal, value);
 363:.\source\rte/sc_engine.h ****       }
 364:.\source\rte/sc_engine.h ****       else
 365:.\source\rte/sc_engine.h ****       {
 366:.\source\rte/sc_engine.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_engine.h **** 		  RTE_SC_ENGINE_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_engine.h ****       }
 369:.\source\rte/sc_engine.h **** 
 370:.\source\rte/sc_engine.h ****    }                                                                                               
 371:.\source\rte/sc_engine.h ****                                                                                                    
 372:.\source\rte/sc_engine.h ****    return ret;                                                                                     
 373:.\source\rte/sc_engine.h **** }                                                                                                  
 374:.\source\rte/sc_engine.h ****                                                                                                    
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 15


 375:.\source\rte/sc_engine.h **** /**
 376:.\source\rte/sc_engine.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_engine.h ****  *
 378:.\source\rte/sc_engine.h ****  * @param SC_ENGINE_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_engine.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_engine.h ****  *
 381:.\source\rte/sc_engine.h ****  **/
 382:.\source\rte/sc_engine.h **** inline RC_t RTE_SC_ENGINE_pushPort( const SC_ENGINE_t * const signal )
 383:.\source\rte/sc_engine.h **** {                                                                                                  
 384:.\source\rte/sc_engine.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_engine.h **** 
 386:.\source\rte/sc_engine.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 132              		.loc 3 386 0
 133 004e 074B     		ldr	r3, .L10+4
 134 0050 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 135 0052 022B     		cmp	r3, #2
 136 0054 03D1     		bne	.L7
 387:.\source\rte/sc_engine.h ****    {
 388:.\source\rte/sc_engine.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 137              		.loc 3 388 0
 138 0056 0548     		ldr	r0, .L10+4
 139 0058 8368     		ldr	r3, [r0, #8]
 140 005a 5B68     		ldr	r3, [r3, #4]
 141 005c 9847     		blx	r3
 142              	.LVL17:
 143              	.L7:
 144              	.LBE21:
 145              	.LBE20:
  61:source\asw/swc_engine.c ****     }
  62:source\asw/swc_engine.c ****     else{
  63:source\asw/swc_engine.c ****         engine.engine_value = 0;
  64:source\asw/swc_engine.c ****     }
  65:source\asw/swc_engine.c ****     RTE_SC_ENGINE_set(&SO_ENGINE_signal, engine);
  66:source\asw/swc_engine.c ****     RTE_SC_ENGINE_pushPort(&SO_ENGINE_signal);
  67:source\asw/swc_engine.c ****     WD_Alive(engine_run);
 146              		.loc 1 67 0
 147 005e 0220     		movs	r0, #2
 148 0060 FFF7FEFF 		bl	WD_Alive
 149              	.LVL18:
 150 0064 38BD     		pop	{r3, r4, r5, pc}
 151              	.L11:
 152 0066 00BF     		.align	2
 153              	.L10:
 154 0068 00000000 		.word	SO_SPEED_signal
 155 006c 00000000 		.word	SO_ENGINE_signal
 156              		.cfi_endproc
 157              	.LFE154:
 158              		.size	ENGINE_set_engine_run, .-ENGINE_set_engine_run
 159              		.text
 160              	.Letext0:
 161              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 162              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 163              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 164              		.file 7 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_types.inc"
 165              		.file 8 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_cpu.inc"
 166              		.file 9 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_common.inc"
 167              		.file 10 ".\\source\\bsw/global.h"
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 16


 168              		.file 11 ".\\source\\rte/rte_types.h"
 169              		.file 12 ".\\source\\rte/rte.h"
 170              		.file 13 ".\\source\\rte/sc_speed_type.h"
 171              		.file 14 ".\\source\\rte/sc_engine_type.h"
 172              		.file 15 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_intfunc.inc"
 173              		.file 16 "Generated_Source\\PSoC5/ErikaOS_1_cortex_mx_ee_context.inc"
 174              		.file 17 "Generated_Source\\PSoC5/ErikaOS_1_common_ee_primitives.inc"
 175              		.file 18 "Generated_Source\\PSoC5/core_cm3.h"
 176              		.file 19 ".\\source\\rte/sp_common.h"
 177              		.file 20 "Generated_Source\\PSoC5/ErikaOS_1_ee_oo_kernel.inc"
 178              		.file 21 "./watchdog.h"
 179              		.section	.debug_info,"",%progbits
 180              	.Ldebug_info0:
 181 0000 CD070000 		.4byte	0x7cd
 182 0004 0400     		.2byte	0x4
 183 0006 00000000 		.4byte	.Ldebug_abbrev0
 184 000a 04       		.byte	0x4
 185 000b 01       		.uleb128 0x1
 186 000c 00000000 		.4byte	.LASF115
 187 0010 0C       		.byte	0xc
 188 0011 63030000 		.4byte	.LASF116
 189 0015 B9020000 		.4byte	.LASF117
 190 0019 00000000 		.4byte	.Ldebug_ranges0+0
 191 001d 00000000 		.4byte	0
 192 0021 00000000 		.4byte	.Ldebug_line0
 193 0025 02       		.uleb128 0x2
 194 0026 01       		.byte	0x1
 195 0027 06       		.byte	0x6
 196 0028 4D040000 		.4byte	.LASF0
 197 002c 03       		.uleb128 0x3
 198 002d 45070000 		.4byte	.LASF4
 199 0031 04       		.byte	0x4
 200 0032 1D       		.byte	0x1d
 201 0033 37000000 		.4byte	0x37
 202 0037 02       		.uleb128 0x2
 203 0038 01       		.byte	0x1
 204 0039 08       		.byte	0x8
 205 003a 2E040000 		.4byte	.LASF1
 206 003e 02       		.uleb128 0x2
 207 003f 02       		.byte	0x2
 208 0040 05       		.byte	0x5
 209 0041 18010000 		.4byte	.LASF2
 210 0045 02       		.uleb128 0x2
 211 0046 02       		.byte	0x2
 212 0047 07       		.byte	0x7
 213 0048 35050000 		.4byte	.LASF3
 214 004c 03       		.uleb128 0x3
 215 004d 2C060000 		.4byte	.LASF5
 216 0051 04       		.byte	0x4
 217 0052 3F       		.byte	0x3f
 218 0053 57000000 		.4byte	0x57
 219 0057 02       		.uleb128 0x2
 220 0058 04       		.byte	0x4
 221 0059 05       		.byte	0x5
 222 005a 31030000 		.4byte	.LASF6
 223 005e 03       		.uleb128 0x3
 224 005f AD010000 		.4byte	.LASF7
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 17


 225 0063 04       		.byte	0x4
 226 0064 41       		.byte	0x41
 227 0065 69000000 		.4byte	0x69
 228 0069 02       		.uleb128 0x2
 229 006a 04       		.byte	0x4
 230 006b 07       		.byte	0x7
 231 006c A4050000 		.4byte	.LASF8
 232 0070 02       		.uleb128 0x2
 233 0071 08       		.byte	0x8
 234 0072 05       		.byte	0x5
 235 0073 92020000 		.4byte	.LASF9
 236 0077 02       		.uleb128 0x2
 237 0078 08       		.byte	0x8
 238 0079 07       		.byte	0x7
 239 007a 59040000 		.4byte	.LASF10
 240 007e 04       		.uleb128 0x4
 241 007f 04       		.byte	0x4
 242 0080 05       		.byte	0x5
 243 0081 696E7400 		.ascii	"int\000"
 244 0085 02       		.uleb128 0x2
 245 0086 04       		.byte	0x4
 246 0087 07       		.byte	0x7
 247 0088 79040000 		.4byte	.LASF11
 248 008c 03       		.uleb128 0x3
 249 008d 36060000 		.4byte	.LASF12
 250 0091 05       		.byte	0x5
 251 0092 18       		.byte	0x18
 252 0093 2C000000 		.4byte	0x2c
 253 0097 03       		.uleb128 0x3
 254 0098 2D050000 		.4byte	.LASF13
 255 009c 05       		.byte	0x5
 256 009d 2C       		.byte	0x2c
 257 009e 4C000000 		.4byte	0x4c
 258 00a2 03       		.uleb128 0x3
 259 00a3 70040000 		.4byte	.LASF14
 260 00a7 05       		.byte	0x5
 261 00a8 30       		.byte	0x30
 262 00a9 5E000000 		.4byte	0x5e
 263 00ad 02       		.uleb128 0x2
 264 00ae 04       		.byte	0x4
 265 00af 04       		.byte	0x4
 266 00b0 63020000 		.4byte	.LASF15
 267 00b4 02       		.uleb128 0x2
 268 00b5 08       		.byte	0x8
 269 00b6 04       		.byte	0x4
 270 00b7 A5060000 		.4byte	.LASF16
 271 00bb 02       		.uleb128 0x2
 272 00bc 01       		.byte	0x1
 273 00bd 08       		.byte	0x8
 274 00be FF000000 		.4byte	.LASF17
 275 00c2 03       		.uleb128 0x3
 276 00c3 22010000 		.4byte	.LASF18
 277 00c7 06       		.byte	0x6
 278 00c8 D8       		.byte	0xd8
 279 00c9 85000000 		.4byte	0x85
 280 00cd 02       		.uleb128 0x2
 281 00ce 08       		.byte	0x8
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 18


 282 00cf 04       		.byte	0x4
 283 00d0 11040000 		.4byte	.LASF19
 284 00d4 03       		.uleb128 0x3
 285 00d5 BE040000 		.4byte	.LASF20
 286 00d9 07       		.byte	0x7
 287 00da 53       		.byte	0x53
 288 00db 7E000000 		.4byte	0x7e
 289 00df 03       		.uleb128 0x3
 290 00e0 B8010000 		.4byte	.LASF21
 291 00e4 07       		.byte	0x7
 292 00e5 54       		.byte	0x54
 293 00e6 85000000 		.4byte	0x85
 294 00ea 03       		.uleb128 0x3
 295 00eb EC050000 		.4byte	.LASF22
 296 00ef 08       		.byte	0x8
 297 00f0 4D       		.byte	0x4d
 298 00f1 DF000000 		.4byte	0xdf
 299 00f5 03       		.uleb128 0x3
 300 00f6 91010000 		.4byte	.LASF23
 301 00fa 08       		.byte	0x8
 302 00fb 4F       		.byte	0x4f
 303 00fc DF000000 		.4byte	0xdf
 304 0100 03       		.uleb128 0x3
 305 0101 C2010000 		.4byte	.LASF24
 306 0105 08       		.byte	0x8
 307 0106 78       		.byte	0x78
 308 0107 D4000000 		.4byte	0xd4
 309 010b 05       		.uleb128 0x5
 310 010c 25040000 		.4byte	.LASF25
 311 0110 09       		.byte	0x9
 312 0111 F701     		.2byte	0x1f7
 313 0113 00010000 		.4byte	0x100
 314 0117 05       		.uleb128 0x5
 315 0118 8E000000 		.4byte	.LASF26
 316 011c 09       		.byte	0x9
 317 011d 2C02     		.2byte	0x22c
 318 011f EA000000 		.4byte	0xea
 319 0123 02       		.uleb128 0x2
 320 0124 04       		.byte	0x4
 321 0125 07       		.byte	0x7
 322 0126 3E010000 		.4byte	.LASF27
 323 012a 03       		.uleb128 0x3
 324 012b F2030000 		.4byte	.LASF28
 325 012f 0A       		.byte	0xa
 326 0130 9C       		.byte	0x9c
 327 0131 37000000 		.4byte	0x37
 328 0135 06       		.uleb128 0x6
 329 0136 01       		.byte	0x1
 330 0137 25000000 		.4byte	0x25
 331 013b 0A       		.byte	0xa
 332 013c CF       		.byte	0xcf
 333 013d DE010000 		.4byte	0x1de
 334 0141 07       		.uleb128 0x7
 335 0142 D5000000 		.4byte	.LASF29
 336 0146 00       		.byte	0
 337 0147 08       		.uleb128 0x8
 338 0148 FD060000 		.4byte	.LASF30
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 19


 339 014c 7F       		.sleb128 -1
 340 014d 08       		.uleb128 0x8
 341 014e 9A040000 		.4byte	.LASF31
 342 0152 7E       		.sleb128 -2
 343 0153 08       		.uleb128 0x8
 344 0154 83010000 		.4byte	.LASF32
 345 0158 7D       		.sleb128 -3
 346 0159 08       		.uleb128 0x8
 347 015a 06070000 		.4byte	.LASF33
 348 015e 7C       		.sleb128 -4
 349 015f 08       		.uleb128 0x8
 350 0160 54020000 		.4byte	.LASF34
 351 0164 7B       		.sleb128 -5
 352 0165 08       		.uleb128 0x8
 353 0166 0A060000 		.4byte	.LASF35
 354 016a 7A       		.sleb128 -6
 355 016b 08       		.uleb128 0x8
 356 016c 3A030000 		.4byte	.LASF36
 357 0170 79       		.sleb128 -7
 358 0171 08       		.uleb128 0x8
 359 0172 9C000000 		.4byte	.LASF37
 360 0176 78       		.sleb128 -8
 361 0177 08       		.uleb128 0x8
 362 0178 A8040000 		.4byte	.LASF38
 363 017c 77       		.sleb128 -9
 364 017d 08       		.uleb128 0x8
 365 017e 7B030000 		.4byte	.LASF39
 366 0182 76       		.sleb128 -10
 367 0183 08       		.uleb128 0x8
 368 0184 6C070000 		.4byte	.LASF40
 369 0188 75       		.sleb128 -11
 370 0189 08       		.uleb128 0x8
 371 018a 86040000 		.4byte	.LASF41
 372 018e 74       		.sleb128 -12
 373 018f 08       		.uleb128 0x8
 374 0190 DA050000 		.4byte	.LASF42
 375 0194 73       		.sleb128 -13
 376 0195 08       		.uleb128 0x8
 377 0196 C2000000 		.4byte	.LASF43
 378 019a 72       		.sleb128 -14
 379 019b 08       		.uleb128 0x8
 380 019c 04010000 		.4byte	.LASF44
 381 01a0 71       		.sleb128 -15
 382 01a1 08       		.uleb128 0x8
 383 01a2 AF030000 		.4byte	.LASF45
 384 01a6 70       		.sleb128 -16
 385 01a7 08       		.uleb128 0x8
 386 01a8 99010000 		.4byte	.LASF46
 387 01ac 6F       		.sleb128 -17
 388 01ad 08       		.uleb128 0x8
 389 01ae 29010000 		.4byte	.LASF47
 390 01b2 6E       		.sleb128 -18
 391 01b3 08       		.uleb128 0x8
 392 01b4 FA020000 		.4byte	.LASF48
 393 01b8 6D       		.sleb128 -19
 394 01b9 08       		.uleb128 0x8
 395 01ba 5F050000 		.4byte	.LASF49
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 20


 396 01be 6C       		.sleb128 -20
 397 01bf 08       		.uleb128 0x8
 398 01c0 E0030000 		.4byte	.LASF50
 399 01c4 6B       		.sleb128 -21
 400 01c5 08       		.uleb128 0x8
 401 01c6 7B060000 		.4byte	.LASF51
 402 01ca 6A       		.sleb128 -22
 403 01cb 08       		.uleb128 0x8
 404 01cc EB010000 		.4byte	.LASF52
 405 01d0 69       		.sleb128 -23
 406 01d1 08       		.uleb128 0x8
 407 01d2 0D030000 		.4byte	.LASF53
 408 01d6 68       		.sleb128 -24
 409 01d7 08       		.uleb128 0x8
 410 01d8 79020000 		.4byte	.LASF54
 411 01dc 67       		.sleb128 -25
 412 01dd 00       		.byte	0
 413 01de 03       		.uleb128 0x3
 414 01df 47010000 		.4byte	.LASF55
 415 01e3 0A       		.byte	0xa
 416 01e4 EA       		.byte	0xea
 417 01e5 35010000 		.4byte	0x135
 418 01e9 03       		.uleb128 0x3
 419 01ea 1F070000 		.4byte	.LASF56
 420 01ee 0B       		.byte	0xb
 421 01ef 19       		.byte	0x19
 422 01f0 F4010000 		.4byte	0x1f4
 423 01f4 09       		.uleb128 0x9
 424 01f5 0B010000 		.4byte	0x10b
 425 01f9 FF010000 		.4byte	0x1ff
 426 01fd 0A       		.uleb128 0xa
 427 01fe 00       		.byte	0
 428 01ff 03       		.uleb128 0x3
 429 0200 3E060000 		.4byte	.LASF57
 430 0204 0B       		.byte	0xb
 431 0205 21       		.byte	0x21
 432 0206 17010000 		.4byte	0x117
 433 020a 03       		.uleb128 0x3
 434 020b 98060000 		.4byte	.LASF58
 435 020f 0B       		.byte	0xb
 436 0210 2D       		.byte	0x2d
 437 0211 A2000000 		.4byte	0xa2
 438 0215 06       		.uleb128 0x6
 439 0216 01       		.byte	0x1
 440 0217 37000000 		.4byte	0x37
 441 021b 0C       		.byte	0xc
 442 021c 59       		.byte	0x59
 443 021d 3A020000 		.4byte	0x23a
 444 0221 07       		.uleb128 0x7
 445 0222 89030000 		.4byte	.LASF59
 446 0226 00       		.byte	0
 447 0227 07       		.uleb128 0x7
 448 0228 4F070000 		.4byte	.LASF60
 449 022c 01       		.byte	0x1
 450 022d 07       		.uleb128 0x7
 451 022e C1060000 		.4byte	.LASF61
 452 0232 02       		.byte	0x2
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 21


 453 0233 07       		.uleb128 0x7
 454 0234 03050000 		.4byte	.LASF62
 455 0238 03       		.byte	0x3
 456 0239 00       		.byte	0
 457 023a 03       		.uleb128 0x3
 458 023b 1E030000 		.4byte	.LASF63
 459 023f 0C       		.byte	0xc
 460 0240 5E       		.byte	0x5e
 461 0241 15020000 		.4byte	0x215
 462 0245 0B       		.uleb128 0xb
 463 0246 17010000 		.4byte	0x117
 464 024a 0B       		.uleb128 0xb
 465 024b C2000000 		.4byte	0xc2
 466 024f 0C       		.uleb128 0xc
 467 0250 04       		.byte	0x4
 468 0251 E9010000 		.4byte	0x1e9
 469 0255 0B       		.uleb128 0xb
 470 0256 4F020000 		.4byte	0x24f
 471 025a 0B       		.uleb128 0xb
 472 025b 2A010000 		.4byte	0x12a
 473 025f 0B       		.uleb128 0xb
 474 0260 0A020000 		.4byte	0x20a
 475 0264 0D       		.uleb128 0xd
 476 0265 01       		.byte	0x1
 477 0266 0D       		.byte	0xd
 478 0267 21       		.byte	0x21
 479 0268 79020000 		.4byte	0x279
 480 026c 0E       		.uleb128 0xe
 481 026d 4C010000 		.4byte	.LASF67
 482 0271 0D       		.byte	0xd
 483 0272 23       		.byte	0x23
 484 0273 8C000000 		.4byte	0x8c
 485 0277 00       		.byte	0
 486 0278 00       		.byte	0
 487 0279 03       		.uleb128 0x3
 488 027a DB010000 		.4byte	.LASF64
 489 027e 0D       		.byte	0xd
 490 027f 26       		.byte	0x26
 491 0280 64020000 		.4byte	0x264
 492 0284 03       		.uleb128 0x3
 493 0285 5C060000 		.4byte	.LASF65
 494 0289 02       		.byte	0x2
 495 028a 26       		.byte	0x26
 496 028b 8F020000 		.4byte	0x28f
 497 028f 0C       		.uleb128 0xc
 498 0290 04       		.byte	0x4
 499 0291 95020000 		.4byte	0x295
 500 0295 0F       		.uleb128 0xf
 501 0296 DE010000 		.4byte	0x1de
 502 029a A4020000 		.4byte	0x2a4
 503 029e 10       		.uleb128 0x10
 504 029f AA020000 		.4byte	0x2aa
 505 02a3 00       		.byte	0
 506 02a4 0C       		.uleb128 0xc
 507 02a5 04       		.byte	0x4
 508 02a6 79020000 		.4byte	0x279
 509 02aa 0B       		.uleb128 0xb
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 22


 510 02ab A4020000 		.4byte	0x2a4
 511 02af 03       		.uleb128 0x3
 512 02b0 E0000000 		.4byte	.LASF66
 513 02b4 02       		.byte	0x2
 514 02b5 2C       		.byte	0x2c
 515 02b6 BA020000 		.4byte	0x2ba
 516 02ba 0C       		.uleb128 0xc
 517 02bb 04       		.byte	0x4
 518 02bc C0020000 		.4byte	0x2c0
 519 02c0 0F       		.uleb128 0xf
 520 02c1 DE010000 		.4byte	0x1de
 521 02c5 CF020000 		.4byte	0x2cf
 522 02c9 10       		.uleb128 0x10
 523 02ca DA020000 		.4byte	0x2da
 524 02ce 00       		.byte	0
 525 02cf 0C       		.uleb128 0xc
 526 02d0 04       		.byte	0x4
 527 02d1 D5020000 		.4byte	0x2d5
 528 02d5 0B       		.uleb128 0xb
 529 02d6 79020000 		.4byte	0x279
 530 02da 0B       		.uleb128 0xb
 531 02db CF020000 		.4byte	0x2cf
 532 02df 11       		.uleb128 0x11
 533 02e0 02020000 		.4byte	.LASF79
 534 02e4 28       		.byte	0x28
 535 02e5 02       		.byte	0x2
 536 02e6 36       		.byte	0x36
 537 02e7 64030000 		.4byte	0x364
 538 02eb 0E       		.uleb128 0xe
 539 02ec E7060000 		.4byte	.LASF68
 540 02f0 02       		.byte	0x2
 541 02f1 3B       		.byte	0x3b
 542 02f2 64030000 		.4byte	0x364
 543 02f6 00       		.byte	0
 544 02f7 0E       		.uleb128 0xe
 545 02f8 FC030000 		.4byte	.LASF69
 546 02fc 02       		.byte	0x2
 547 02fd 40       		.byte	0x40
 548 02fe 69030000 		.4byte	0x369
 549 0302 04       		.byte	0x4
 550 0303 0E       		.uleb128 0xe
 551 0304 CF040000 		.4byte	.LASF70
 552 0308 02       		.byte	0x2
 553 0309 45       		.byte	0x45
 554 030a 45020000 		.4byte	0x245
 555 030e 08       		.byte	0x8
 556 030f 0E       		.uleb128 0xe
 557 0310 F5000000 		.4byte	.LASF71
 558 0314 02       		.byte	0x2
 559 0315 4B       		.byte	0x4b
 560 0316 45020000 		.4byte	0x245
 561 031a 0C       		.byte	0xc
 562 031b 0E       		.uleb128 0xe
 563 031c 7F050000 		.4byte	.LASF72
 564 0320 02       		.byte	0x2
 565 0321 50       		.byte	0x50
 566 0322 4A020000 		.4byte	0x24a
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 23


 567 0326 10       		.byte	0x10
 568 0327 0E       		.uleb128 0xe
 569 0328 CC050000 		.4byte	.LASF73
 570 032c 02       		.byte	0x2
 571 032d 55       		.byte	0x55
 572 032e 55020000 		.4byte	0x255
 573 0332 14       		.byte	0x14
 574 0333 0E       		.uleb128 0xe
 575 0334 B1000000 		.4byte	.LASF74
 576 0338 02       		.byte	0x2
 577 0339 5A       		.byte	0x5a
 578 033a 4A020000 		.4byte	0x24a
 579 033e 18       		.byte	0x18
 580 033f 0E       		.uleb128 0xe
 581 0340 72050000 		.4byte	.LASF75
 582 0344 02       		.byte	0x2
 583 0345 5F       		.byte	0x5f
 584 0346 55020000 		.4byte	0x255
 585 034a 1C       		.byte	0x1c
 586 034b 0E       		.uleb128 0xe
 587 034c E1040000 		.4byte	.LASF76
 588 0350 02       		.byte	0x2
 589 0351 65       		.byte	0x65
 590 0352 5A020000 		.4byte	0x25a
 591 0356 20       		.byte	0x20
 592 0357 0E       		.uleb128 0xe
 593 0358 20020000 		.4byte	.LASF77
 594 035c 02       		.byte	0x2
 595 035d 6A       		.byte	0x6a
 596 035e 5F020000 		.4byte	0x25f
 597 0362 24       		.byte	0x24
 598 0363 00       		.byte	0
 599 0364 0B       		.uleb128 0xb
 600 0365 84020000 		.4byte	0x284
 601 0369 0B       		.uleb128 0xb
 602 036a AF020000 		.4byte	0x2af
 603 036e 03       		.uleb128 0x3
 604 036f 11020000 		.4byte	.LASF78
 605 0373 02       		.byte	0x2
 606 0374 6D       		.byte	0x6d
 607 0375 79030000 		.4byte	0x379
 608 0379 0B       		.uleb128 0xb
 609 037a DF020000 		.4byte	0x2df
 610 037e 11       		.uleb128 0x11
 611 037f 70060000 		.4byte	.LASF80
 612 0383 0C       		.byte	0xc
 613 0384 02       		.byte	0x2
 614 0385 79       		.byte	0x79
 615 0386 BB030000 		.4byte	0x3bb
 616 038a 0E       		.uleb128 0xe
 617 038b C9010000 		.4byte	.LASF81
 618 038f 02       		.byte	0x2
 619 0390 7F       		.byte	0x7f
 620 0391 79020000 		.4byte	0x279
 621 0395 00       		.byte	0
 622 0396 0E       		.uleb128 0xe
 623 0397 DA040000 		.4byte	.LASF82
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 24


 624 039b 02       		.byte	0x2
 625 039c 84       		.byte	0x84
 626 039d 3A020000 		.4byte	0x23a
 627 03a1 01       		.byte	0x1
 628 03a2 12       		.uleb128 0x12
 629 03a3 61676500 		.ascii	"age\000"
 630 03a7 02       		.byte	0x2
 631 03a8 89       		.byte	0x89
 632 03a9 A2000000 		.4byte	0xa2
 633 03ad 04       		.byte	0x4
 634 03ae 0E       		.uleb128 0xe
 635 03af C7040000 		.4byte	.LASF83
 636 03b3 02       		.byte	0x2
 637 03b4 8E       		.byte	0x8e
 638 03b5 C1030000 		.4byte	0x3c1
 639 03b9 08       		.byte	0x8
 640 03ba 00       		.byte	0
 641 03bb 0C       		.uleb128 0xc
 642 03bc 04       		.byte	0x4
 643 03bd 6E030000 		.4byte	0x36e
 644 03c1 0B       		.uleb128 0xb
 645 03c2 BB030000 		.4byte	0x3bb
 646 03c6 03       		.uleb128 0x3
 647 03c7 8D060000 		.4byte	.LASF84
 648 03cb 02       		.byte	0x2
 649 03cc 91       		.byte	0x91
 650 03cd 7E030000 		.4byte	0x37e
 651 03d1 0D       		.uleb128 0xd
 652 03d2 01       		.byte	0x1
 653 03d3 0E       		.byte	0xe
 654 03d4 21       		.byte	0x21
 655 03d5 E6030000 		.4byte	0x3e6
 656 03d9 0E       		.uleb128 0xe
 657 03da A2030000 		.4byte	.LASF85
 658 03de 0E       		.byte	0xe
 659 03df 23       		.byte	0x23
 660 03e0 8C000000 		.4byte	0x8c
 661 03e4 00       		.byte	0
 662 03e5 00       		.byte	0
 663 03e6 03       		.uleb128 0x3
 664 03e7 1C050000 		.4byte	.LASF86
 665 03eb 0E       		.byte	0xe
 666 03ec 26       		.byte	0x26
 667 03ed D1030000 		.4byte	0x3d1
 668 03f1 03       		.uleb128 0x3
 669 03f2 AC060000 		.4byte	.LASF87
 670 03f6 03       		.byte	0x3
 671 03f7 26       		.byte	0x26
 672 03f8 FC030000 		.4byte	0x3fc
 673 03fc 0C       		.uleb128 0xc
 674 03fd 04       		.byte	0x4
 675 03fe 02040000 		.4byte	0x402
 676 0402 0F       		.uleb128 0xf
 677 0403 DE010000 		.4byte	0x1de
 678 0407 11040000 		.4byte	0x411
 679 040b 10       		.uleb128 0x10
 680 040c 17040000 		.4byte	0x417
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 25


 681 0410 00       		.byte	0
 682 0411 0C       		.uleb128 0xc
 683 0412 04       		.byte	0x4
 684 0413 E6030000 		.4byte	0x3e6
 685 0417 0B       		.uleb128 0xb
 686 0418 11040000 		.4byte	0x411
 687 041c 03       		.uleb128 0x3
 688 041d B6050000 		.4byte	.LASF88
 689 0421 03       		.byte	0x3
 690 0422 2C       		.byte	0x2c
 691 0423 27040000 		.4byte	0x427
 692 0427 0C       		.uleb128 0xc
 693 0428 04       		.byte	0x4
 694 0429 2D040000 		.4byte	0x42d
 695 042d 0F       		.uleb128 0xf
 696 042e DE010000 		.4byte	0x1de
 697 0432 3C040000 		.4byte	0x43c
 698 0436 10       		.uleb128 0x10
 699 0437 47040000 		.4byte	0x447
 700 043b 00       		.byte	0
 701 043c 0C       		.uleb128 0xc
 702 043d 04       		.byte	0x4
 703 043e 42040000 		.4byte	0x442
 704 0442 0B       		.uleb128 0xb
 705 0443 E6030000 		.4byte	0x3e6
 706 0447 0B       		.uleb128 0xb
 707 0448 3C040000 		.4byte	0x43c
 708 044c 11       		.uleb128 0x11
 709 044d C0030000 		.4byte	.LASF89
 710 0451 28       		.byte	0x28
 711 0452 03       		.byte	0x3
 712 0453 36       		.byte	0x36
 713 0454 D1040000 		.4byte	0x4d1
 714 0458 0E       		.uleb128 0xe
 715 0459 E7060000 		.4byte	.LASF68
 716 045d 03       		.byte	0x3
 717 045e 3B       		.byte	0x3b
 718 045f D1040000 		.4byte	0x4d1
 719 0463 00       		.byte	0
 720 0464 0E       		.uleb128 0xe
 721 0465 FC030000 		.4byte	.LASF69
 722 0469 03       		.byte	0x3
 723 046a 40       		.byte	0x40
 724 046b D6040000 		.4byte	0x4d6
 725 046f 04       		.byte	0x4
 726 0470 0E       		.uleb128 0xe
 727 0471 CF040000 		.4byte	.LASF70
 728 0475 03       		.byte	0x3
 729 0476 45       		.byte	0x45
 730 0477 45020000 		.4byte	0x245
 731 047b 08       		.byte	0x8
 732 047c 0E       		.uleb128 0xe
 733 047d F5000000 		.4byte	.LASF71
 734 0481 03       		.byte	0x3
 735 0482 4B       		.byte	0x4b
 736 0483 45020000 		.4byte	0x245
 737 0487 0C       		.byte	0xc
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 26


 738 0488 0E       		.uleb128 0xe
 739 0489 7F050000 		.4byte	.LASF72
 740 048d 03       		.byte	0x3
 741 048e 50       		.byte	0x50
 742 048f 4A020000 		.4byte	0x24a
 743 0493 10       		.byte	0x10
 744 0494 0E       		.uleb128 0xe
 745 0495 CC050000 		.4byte	.LASF73
 746 0499 03       		.byte	0x3
 747 049a 55       		.byte	0x55
 748 049b 55020000 		.4byte	0x255
 749 049f 14       		.byte	0x14
 750 04a0 0E       		.uleb128 0xe
 751 04a1 B1000000 		.4byte	.LASF74
 752 04a5 03       		.byte	0x3
 753 04a6 5A       		.byte	0x5a
 754 04a7 4A020000 		.4byte	0x24a
 755 04ab 18       		.byte	0x18
 756 04ac 0E       		.uleb128 0xe
 757 04ad 72050000 		.4byte	.LASF75
 758 04b1 03       		.byte	0x3
 759 04b2 5F       		.byte	0x5f
 760 04b3 55020000 		.4byte	0x255
 761 04b7 1C       		.byte	0x1c
 762 04b8 0E       		.uleb128 0xe
 763 04b9 E1040000 		.4byte	.LASF76
 764 04bd 03       		.byte	0x3
 765 04be 65       		.byte	0x65
 766 04bf 5A020000 		.4byte	0x25a
 767 04c3 20       		.byte	0x20
 768 04c4 0E       		.uleb128 0xe
 769 04c5 20020000 		.4byte	.LASF77
 770 04c9 03       		.byte	0x3
 771 04ca 6A       		.byte	0x6a
 772 04cb 5F020000 		.4byte	0x25f
 773 04cf 24       		.byte	0x24
 774 04d0 00       		.byte	0
 775 04d1 0B       		.uleb128 0xb
 776 04d2 F1030000 		.4byte	0x3f1
 777 04d6 0B       		.uleb128 0xb
 778 04d7 1C040000 		.4byte	0x41c
 779 04db 03       		.uleb128 0x3
 780 04dc D0030000 		.4byte	.LASF90
 781 04e0 03       		.byte	0x3
 782 04e1 6D       		.byte	0x6d
 783 04e2 E6040000 		.4byte	0x4e6
 784 04e6 0B       		.uleb128 0xb
 785 04e7 4C040000 		.4byte	0x44c
 786 04eb 11       		.uleb128 0x11
 787 04ec CF010000 		.4byte	.LASF91
 788 04f0 0C       		.byte	0xc
 789 04f1 03       		.byte	0x3
 790 04f2 79       		.byte	0x79
 791 04f3 28050000 		.4byte	0x528
 792 04f7 0E       		.uleb128 0xe
 793 04f8 C9010000 		.4byte	.LASF81
 794 04fc 03       		.byte	0x3
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 27


 795 04fd 7F       		.byte	0x7f
 796 04fe E6030000 		.4byte	0x3e6
 797 0502 00       		.byte	0
 798 0503 0E       		.uleb128 0xe
 799 0504 DA040000 		.4byte	.LASF82
 800 0508 03       		.byte	0x3
 801 0509 84       		.byte	0x84
 802 050a 3A020000 		.4byte	0x23a
 803 050e 01       		.byte	0x1
 804 050f 12       		.uleb128 0x12
 805 0510 61676500 		.ascii	"age\000"
 806 0514 03       		.byte	0x3
 807 0515 89       		.byte	0x89
 808 0516 A2000000 		.4byte	0xa2
 809 051a 04       		.byte	0x4
 810 051b 0E       		.uleb128 0xe
 811 051c C7040000 		.4byte	.LASF83
 812 0520 03       		.byte	0x3
 813 0521 8E       		.byte	0x8e
 814 0522 2E050000 		.4byte	0x52e
 815 0526 08       		.byte	0x8
 816 0527 00       		.byte	0
 817 0528 0C       		.uleb128 0xc
 818 0529 04       		.byte	0x4
 819 052a DB040000 		.4byte	0x4db
 820 052e 0B       		.uleb128 0xb
 821 052f 28050000 		.4byte	0x528
 822 0533 03       		.uleb128 0x3
 823 0534 F7040000 		.4byte	.LASF92
 824 0538 03       		.byte	0x3
 825 0539 91       		.byte	0x91
 826 053a EB040000 		.4byte	0x4eb
 827 053e 13       		.uleb128 0x13
 828 053f 48050000 		.4byte	.LASF93
 829 0543 02       		.byte	0x2
 830 0544 B8       		.byte	0xb8
 831 0545 3A020000 		.4byte	0x23a
 832 0549 03       		.byte	0x3
 833 054a 5A050000 		.4byte	0x55a
 834 054e 14       		.uleb128 0x14
 835 054f F0040000 		.4byte	.LASF95
 836 0553 02       		.byte	0x2
 837 0554 B8       		.byte	0xb8
 838 0555 65050000 		.4byte	0x565
 839 0559 00       		.byte	0
 840 055a 0C       		.uleb128 0xc
 841 055b 04       		.byte	0x4
 842 055c 60050000 		.4byte	0x560
 843 0560 0B       		.uleb128 0xb
 844 0561 C6030000 		.4byte	0x3c6
 845 0565 0B       		.uleb128 0xb
 846 0566 5A050000 		.4byte	0x55a
 847 056a 15       		.uleb128 0x15
 848 056b 72010000 		.4byte	.LASF94
 849 056f 02       		.byte	0x2
 850 0570 1201     		.2byte	0x112
 851 0572 79020000 		.4byte	0x279
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 28


 852 0576 03       		.byte	0x3
 853 0577 88050000 		.4byte	0x588
 854 057b 16       		.uleb128 0x16
 855 057c F0040000 		.4byte	.LASF95
 856 0580 02       		.byte	0x2
 857 0581 1201     		.2byte	0x112
 858 0583 65050000 		.4byte	0x565
 859 0587 00       		.byte	0
 860 0588 13       		.uleb128 0x13
 861 0589 48060000 		.4byte	.LASF96
 862 058d 02       		.byte	0x2
 863 058e E4       		.byte	0xe4
 864 058f A2000000 		.4byte	0xa2
 865 0593 03       		.byte	0x3
 866 0594 A4050000 		.4byte	0x5a4
 867 0598 14       		.uleb128 0x14
 868 0599 F0040000 		.4byte	.LASF95
 869 059d 02       		.byte	0x2
 870 059e E4       		.byte	0xe4
 871 059f 65050000 		.4byte	0x565
 872 05a3 00       		.byte	0
 873 05a4 15       		.uleb128 0x15
 874 05a5 4C030000 		.4byte	.LASF97
 875 05a9 03       		.byte	0x3
 876 05aa 7E01     		.2byte	0x17e
 877 05ac DE010000 		.4byte	0x1de
 878 05b0 03       		.byte	0x3
 879 05b1 CE050000 		.4byte	0x5ce
 880 05b5 16       		.uleb128 0x16
 881 05b6 F0040000 		.4byte	.LASF95
 882 05ba 03       		.byte	0x3
 883 05bb 7E01     		.2byte	0x17e
 884 05bd D9050000 		.4byte	0x5d9
 885 05c1 17       		.uleb128 0x17
 886 05c2 72657400 		.ascii	"ret\000"
 887 05c6 03       		.byte	0x3
 888 05c7 8001     		.2byte	0x180
 889 05c9 DE010000 		.4byte	0x1de
 890 05cd 00       		.byte	0
 891 05ce 0C       		.uleb128 0xc
 892 05cf 04       		.byte	0x4
 893 05d0 D4050000 		.4byte	0x5d4
 894 05d4 0B       		.uleb128 0xb
 895 05d5 33050000 		.4byte	0x533
 896 05d9 0B       		.uleb128 0xb
 897 05da CE050000 		.4byte	0x5ce
 898 05de 15       		.uleb128 0x15
 899 05df 29020000 		.4byte	.LASF98
 900 05e3 03       		.byte	0x3
 901 05e4 3501     		.2byte	0x135
 902 05e6 DE010000 		.4byte	0x1de
 903 05ea 03       		.byte	0x3
 904 05eb 3A060000 		.4byte	0x63a
 905 05ef 16       		.uleb128 0x16
 906 05f0 F0040000 		.4byte	.LASF95
 907 05f4 03       		.byte	0x3
 908 05f5 3501     		.2byte	0x135
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 29


 909 05f7 40060000 		.4byte	0x640
 910 05fb 16       		.uleb128 0x16
 911 05fc C9010000 		.4byte	.LASF81
 912 0600 03       		.byte	0x3
 913 0601 3501     		.2byte	0x135
 914 0603 42040000 		.4byte	0x442
 915 0607 17       		.uleb128 0x17
 916 0608 72657400 		.ascii	"ret\000"
 917 060c 03       		.byte	0x3
 918 060d 3801     		.2byte	0x138
 919 060f DE010000 		.4byte	0x1de
 920 0613 18       		.uleb128 0x18
 921 0614 1D040000 		.4byte	.LASF99
 922 0618 03       		.byte	0x3
 923 0619 3901     		.2byte	0x139
 924 061b C2000000 		.4byte	0xc2
 925 061f 18       		.uleb128 0x18
 926 0620 06040000 		.4byte	.LASF100
 927 0624 03       		.byte	0x3
 928 0625 4301     		.2byte	0x143
 929 0627 4F020000 		.4byte	0x24f
 930 062b 19       		.uleb128 0x19
 931 062c 18       		.uleb128 0x18
 932 062d 6D010000 		.4byte	.LASF101
 933 0631 03       		.byte	0x3
 934 0632 4801     		.2byte	0x148
 935 0634 0B010000 		.4byte	0x10b
 936 0638 00       		.byte	0
 937 0639 00       		.byte	0
 938 063a 0C       		.uleb128 0xc
 939 063b 04       		.byte	0x4
 940 063c 33050000 		.4byte	0x533
 941 0640 0B       		.uleb128 0xb
 942 0641 3A060000 		.4byte	0x63a
 943 0645 1A       		.uleb128 0x1a
 944 0646 F4050000 		.4byte	.LASF118
 945 064a 01       		.byte	0x1
 946 064b 2C       		.byte	0x2c
 947 064c 00000000 		.4byte	.LFB154
 948 0650 70000000 		.4byte	.LFE154-.LFB154
 949 0654 01       		.uleb128 0x1
 950 0655 9C       		.byte	0x9c
 951 0656 5B070000 		.4byte	0x75b
 952 065a 1B       		.uleb128 0x1b
 953 065b 657600   		.ascii	"ev\000"
 954 065e 01       		.byte	0x1
 955 065f 2C       		.byte	0x2c
 956 0660 FF010000 		.4byte	0x1ff
 957 0664 00000000 		.4byte	.LLST0
 958 0668 1C       		.uleb128 0x1c
 959 0669 94040000 		.4byte	.LASF103
 960 066d 01       		.byte	0x1
 961 066e 30       		.byte	0x30
 962 066f 79020000 		.4byte	0x279
 963 0673 3A000000 		.4byte	.LLST1
 964 0677 1D       		.uleb128 0x1d
 965 0678 3C040000 		.4byte	.LASF102
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 30


 966 067c 01       		.byte	0x1
 967 067d 31       		.byte	0x31
 968 067e A2000000 		.4byte	0xa2
 969 0682 1C       		.uleb128 0x1c
 970 0683 46040000 		.4byte	.LASF104
 971 0687 01       		.byte	0x1
 972 0688 32       		.byte	0x32
 973 0689 E6030000 		.4byte	0x3e6
 974 068d 4D000000 		.4byte	.LLST2
 975 0691 1E       		.uleb128 0x1e
 976 0692 3E050000 		.4byte	0x53e
 977 0696 06000000 		.4byte	.LBB13
 978 069a 04000000 		.4byte	.LBE13-.LBB13
 979 069e 01       		.byte	0x1
 980 069f 34       		.byte	0x34
 981 06a0 AA060000 		.4byte	0x6aa
 982 06a4 1F       		.uleb128 0x1f
 983 06a5 4E050000 		.4byte	0x54e
 984 06a9 00       		.byte	0
 985 06aa 1E       		.uleb128 0x1e
 986 06ab 88050000 		.4byte	0x588
 987 06af 12000000 		.4byte	.LBB15
 988 06b3 04000000 		.4byte	.LBE15-.LBB15
 989 06b7 01       		.byte	0x1
 990 06b8 39       		.byte	0x39
 991 06b9 C3060000 		.4byte	0x6c3
 992 06bd 1F       		.uleb128 0x1f
 993 06be 98050000 		.4byte	0x598
 994 06c2 00       		.byte	0
 995 06c3 1E       		.uleb128 0x1e
 996 06c4 DE050000 		.4byte	0x5de
 997 06c8 1C000000 		.4byte	.LBB17
 998 06cc 32000000 		.4byte	.LBE17-.LBB17
 999 06d0 01       		.byte	0x1
 1000 06d1 41       		.byte	0x41
 1001 06d2 1F070000 		.4byte	0x71f
 1002 06d6 1F       		.uleb128 0x1f
 1003 06d7 FB050000 		.4byte	0x5fb
 1004 06db 1F       		.uleb128 0x1f
 1005 06dc EF050000 		.4byte	0x5ef
 1006 06e0 20       		.uleb128 0x20
 1007 06e1 1C000000 		.4byte	.LBB18
 1008 06e5 32000000 		.4byte	.LBE18-.LBB18
 1009 06e9 21       		.uleb128 0x21
 1010 06ea 07060000 		.4byte	0x607
 1011 06ee 00       		.byte	0
 1012 06ef 22       		.uleb128 0x22
 1013 06f0 13060000 		.4byte	0x613
 1014 06f4 60000000 		.4byte	.LLST3
 1015 06f8 22       		.uleb128 0x22
 1016 06f9 1F060000 		.4byte	0x61f
 1017 06fd 96000000 		.4byte	.LLST4
 1018 0701 20       		.uleb128 0x20
 1019 0702 34000000 		.4byte	.LBB19
 1020 0706 0A000000 		.4byte	.LBE19-.LBB19
 1021 070a 22       		.uleb128 0x22
 1022 070b 2C060000 		.4byte	0x62c
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 31


 1023 070f A9000000 		.4byte	.LLST5
 1024 0713 23       		.uleb128 0x23
 1025 0714 3E000000 		.4byte	.LVL12
 1026 0718 B9070000 		.4byte	0x7b9
 1027 071c 00       		.byte	0
 1028 071d 00       		.byte	0
 1029 071e 00       		.byte	0
 1030 071f 1E       		.uleb128 0x1e
 1031 0720 A4050000 		.4byte	0x5a4
 1032 0724 4E000000 		.4byte	.LBB20
 1033 0728 10000000 		.4byte	.LBE20-.LBB20
 1034 072c 01       		.byte	0x1
 1035 072d 42       		.byte	0x42
 1036 072e 4B070000 		.4byte	0x74b
 1037 0732 1F       		.uleb128 0x1f
 1038 0733 B5050000 		.4byte	0x5b5
 1039 0737 20       		.uleb128 0x20
 1040 0738 4E000000 		.4byte	.LBB21
 1041 073c 10000000 		.4byte	.LBE21-.LBB21
 1042 0740 22       		.uleb128 0x22
 1043 0741 C1050000 		.4byte	0x5c1
 1044 0745 C2000000 		.4byte	.LLST6
 1045 0749 00       		.byte	0
 1046 074a 00       		.byte	0
 1047 074b 24       		.uleb128 0x24
 1048 074c 64000000 		.4byte	.LVL18
 1049 0750 C5070000 		.4byte	0x7c5
 1050 0754 25       		.uleb128 0x25
 1051 0755 01       		.uleb128 0x1
 1052 0756 50       		.byte	0x50
 1053 0757 01       		.uleb128 0x1
 1054 0758 32       		.byte	0x32
 1055 0759 00       		.byte	0
 1056 075a 00       		.byte	0
 1057 075b 26       		.uleb128 0x26
 1058 075c 2D070000 		.4byte	.LASF105
 1059 0760 0F       		.byte	0xf
 1060 0761 40       		.byte	0x40
 1061 0762 EA000000 		.4byte	0xea
 1062 0766 26       		.uleb128 0x26
 1063 0767 A0020000 		.4byte	.LASF106
 1064 076b 0F       		.byte	0xf
 1065 076c 47       		.byte	0x47
 1066 076d F5000000 		.4byte	0xf5
 1067 0771 26       		.uleb128 0x26
 1068 0772 91050000 		.4byte	.LASF107
 1069 0776 0F       		.byte	0xf
 1070 0777 4A       		.byte	0x4a
 1071 0778 EA000000 		.4byte	0xea
 1072 077c 26       		.uleb128 0x26
 1073 077d 3B020000 		.4byte	.LASF108
 1074 0781 10       		.byte	0x10
 1075 0782 48       		.byte	0x48
 1076 0783 00010000 		.4byte	0x100
 1077 0787 26       		.uleb128 0x26
 1078 0788 58010000 		.4byte	.LASF109
 1079 078c 11       		.byte	0x11
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 32


 1080 078d 44       		.byte	0x44
 1081 078e EA000000 		.4byte	0xea
 1082 0792 27       		.uleb128 0x27
 1083 0793 F0060000 		.4byte	.LASF110
 1084 0797 12       		.byte	0x12
 1085 0798 1207     		.2byte	0x712
 1086 079a 9E070000 		.4byte	0x79e
 1087 079e 28       		.uleb128 0x28
 1088 079f 97000000 		.4byte	0x97
 1089 07a3 26       		.uleb128 0x26
 1090 07a4 69020000 		.4byte	.LASF111
 1091 07a8 13       		.byte	0x13
 1092 07a9 39       		.byte	0x39
 1093 07aa C6030000 		.4byte	0x3c6
 1094 07ae 26       		.uleb128 0x26
 1095 07af 1B060000 		.4byte	.LASF112
 1096 07b3 13       		.byte	0x13
 1097 07b4 48       		.byte	0x48
 1098 07b5 33050000 		.4byte	0x533
 1099 07b9 29       		.uleb128 0x29
 1100 07ba D8060000 		.4byte	.LASF113
 1101 07be D8060000 		.4byte	.LASF113
 1102 07c2 14       		.byte	0x14
 1103 07c3 4A01     		.2byte	0x14a
 1104 07c5 2A       		.uleb128 0x2a
 1105 07c6 16070000 		.4byte	.LASF114
 1106 07ca 16070000 		.4byte	.LASF114
 1107 07ce 15       		.byte	0x15
 1108 07cf 85       		.byte	0x85
 1109 07d0 00       		.byte	0
 1110              		.section	.debug_abbrev,"",%progbits
 1111              	.Ldebug_abbrev0:
 1112 0000 01       		.uleb128 0x1
 1113 0001 11       		.uleb128 0x11
 1114 0002 01       		.byte	0x1
 1115 0003 25       		.uleb128 0x25
 1116 0004 0E       		.uleb128 0xe
 1117 0005 13       		.uleb128 0x13
 1118 0006 0B       		.uleb128 0xb
 1119 0007 03       		.uleb128 0x3
 1120 0008 0E       		.uleb128 0xe
 1121 0009 1B       		.uleb128 0x1b
 1122 000a 0E       		.uleb128 0xe
 1123 000b 55       		.uleb128 0x55
 1124 000c 17       		.uleb128 0x17
 1125 000d 11       		.uleb128 0x11
 1126 000e 01       		.uleb128 0x1
 1127 000f 10       		.uleb128 0x10
 1128 0010 17       		.uleb128 0x17
 1129 0011 00       		.byte	0
 1130 0012 00       		.byte	0
 1131 0013 02       		.uleb128 0x2
 1132 0014 24       		.uleb128 0x24
 1133 0015 00       		.byte	0
 1134 0016 0B       		.uleb128 0xb
 1135 0017 0B       		.uleb128 0xb
 1136 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 33


 1137 0019 0B       		.uleb128 0xb
 1138 001a 03       		.uleb128 0x3
 1139 001b 0E       		.uleb128 0xe
 1140 001c 00       		.byte	0
 1141 001d 00       		.byte	0
 1142 001e 03       		.uleb128 0x3
 1143 001f 16       		.uleb128 0x16
 1144 0020 00       		.byte	0
 1145 0021 03       		.uleb128 0x3
 1146 0022 0E       		.uleb128 0xe
 1147 0023 3A       		.uleb128 0x3a
 1148 0024 0B       		.uleb128 0xb
 1149 0025 3B       		.uleb128 0x3b
 1150 0026 0B       		.uleb128 0xb
 1151 0027 49       		.uleb128 0x49
 1152 0028 13       		.uleb128 0x13
 1153 0029 00       		.byte	0
 1154 002a 00       		.byte	0
 1155 002b 04       		.uleb128 0x4
 1156 002c 24       		.uleb128 0x24
 1157 002d 00       		.byte	0
 1158 002e 0B       		.uleb128 0xb
 1159 002f 0B       		.uleb128 0xb
 1160 0030 3E       		.uleb128 0x3e
 1161 0031 0B       		.uleb128 0xb
 1162 0032 03       		.uleb128 0x3
 1163 0033 08       		.uleb128 0x8
 1164 0034 00       		.byte	0
 1165 0035 00       		.byte	0
 1166 0036 05       		.uleb128 0x5
 1167 0037 16       		.uleb128 0x16
 1168 0038 00       		.byte	0
 1169 0039 03       		.uleb128 0x3
 1170 003a 0E       		.uleb128 0xe
 1171 003b 3A       		.uleb128 0x3a
 1172 003c 0B       		.uleb128 0xb
 1173 003d 3B       		.uleb128 0x3b
 1174 003e 05       		.uleb128 0x5
 1175 003f 49       		.uleb128 0x49
 1176 0040 13       		.uleb128 0x13
 1177 0041 00       		.byte	0
 1178 0042 00       		.byte	0
 1179 0043 06       		.uleb128 0x6
 1180 0044 04       		.uleb128 0x4
 1181 0045 01       		.byte	0x1
 1182 0046 0B       		.uleb128 0xb
 1183 0047 0B       		.uleb128 0xb
 1184 0048 49       		.uleb128 0x49
 1185 0049 13       		.uleb128 0x13
 1186 004a 3A       		.uleb128 0x3a
 1187 004b 0B       		.uleb128 0xb
 1188 004c 3B       		.uleb128 0x3b
 1189 004d 0B       		.uleb128 0xb
 1190 004e 01       		.uleb128 0x1
 1191 004f 13       		.uleb128 0x13
 1192 0050 00       		.byte	0
 1193 0051 00       		.byte	0
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 34


 1194 0052 07       		.uleb128 0x7
 1195 0053 28       		.uleb128 0x28
 1196 0054 00       		.byte	0
 1197 0055 03       		.uleb128 0x3
 1198 0056 0E       		.uleb128 0xe
 1199 0057 1C       		.uleb128 0x1c
 1200 0058 0B       		.uleb128 0xb
 1201 0059 00       		.byte	0
 1202 005a 00       		.byte	0
 1203 005b 08       		.uleb128 0x8
 1204 005c 28       		.uleb128 0x28
 1205 005d 00       		.byte	0
 1206 005e 03       		.uleb128 0x3
 1207 005f 0E       		.uleb128 0xe
 1208 0060 1C       		.uleb128 0x1c
 1209 0061 0D       		.uleb128 0xd
 1210 0062 00       		.byte	0
 1211 0063 00       		.byte	0
 1212 0064 09       		.uleb128 0x9
 1213 0065 01       		.uleb128 0x1
 1214 0066 01       		.byte	0x1
 1215 0067 49       		.uleb128 0x49
 1216 0068 13       		.uleb128 0x13
 1217 0069 01       		.uleb128 0x1
 1218 006a 13       		.uleb128 0x13
 1219 006b 00       		.byte	0
 1220 006c 00       		.byte	0
 1221 006d 0A       		.uleb128 0xa
 1222 006e 21       		.uleb128 0x21
 1223 006f 00       		.byte	0
 1224 0070 00       		.byte	0
 1225 0071 00       		.byte	0
 1226 0072 0B       		.uleb128 0xb
 1227 0073 26       		.uleb128 0x26
 1228 0074 00       		.byte	0
 1229 0075 49       		.uleb128 0x49
 1230 0076 13       		.uleb128 0x13
 1231 0077 00       		.byte	0
 1232 0078 00       		.byte	0
 1233 0079 0C       		.uleb128 0xc
 1234 007a 0F       		.uleb128 0xf
 1235 007b 00       		.byte	0
 1236 007c 0B       		.uleb128 0xb
 1237 007d 0B       		.uleb128 0xb
 1238 007e 49       		.uleb128 0x49
 1239 007f 13       		.uleb128 0x13
 1240 0080 00       		.byte	0
 1241 0081 00       		.byte	0
 1242 0082 0D       		.uleb128 0xd
 1243 0083 13       		.uleb128 0x13
 1244 0084 01       		.byte	0x1
 1245 0085 0B       		.uleb128 0xb
 1246 0086 0B       		.uleb128 0xb
 1247 0087 3A       		.uleb128 0x3a
 1248 0088 0B       		.uleb128 0xb
 1249 0089 3B       		.uleb128 0x3b
 1250 008a 0B       		.uleb128 0xb
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 35


 1251 008b 01       		.uleb128 0x1
 1252 008c 13       		.uleb128 0x13
 1253 008d 00       		.byte	0
 1254 008e 00       		.byte	0
 1255 008f 0E       		.uleb128 0xe
 1256 0090 0D       		.uleb128 0xd
 1257 0091 00       		.byte	0
 1258 0092 03       		.uleb128 0x3
 1259 0093 0E       		.uleb128 0xe
 1260 0094 3A       		.uleb128 0x3a
 1261 0095 0B       		.uleb128 0xb
 1262 0096 3B       		.uleb128 0x3b
 1263 0097 0B       		.uleb128 0xb
 1264 0098 49       		.uleb128 0x49
 1265 0099 13       		.uleb128 0x13
 1266 009a 38       		.uleb128 0x38
 1267 009b 0B       		.uleb128 0xb
 1268 009c 00       		.byte	0
 1269 009d 00       		.byte	0
 1270 009e 0F       		.uleb128 0xf
 1271 009f 15       		.uleb128 0x15
 1272 00a0 01       		.byte	0x1
 1273 00a1 27       		.uleb128 0x27
 1274 00a2 19       		.uleb128 0x19
 1275 00a3 49       		.uleb128 0x49
 1276 00a4 13       		.uleb128 0x13
 1277 00a5 01       		.uleb128 0x1
 1278 00a6 13       		.uleb128 0x13
 1279 00a7 00       		.byte	0
 1280 00a8 00       		.byte	0
 1281 00a9 10       		.uleb128 0x10
 1282 00aa 05       		.uleb128 0x5
 1283 00ab 00       		.byte	0
 1284 00ac 49       		.uleb128 0x49
 1285 00ad 13       		.uleb128 0x13
 1286 00ae 00       		.byte	0
 1287 00af 00       		.byte	0
 1288 00b0 11       		.uleb128 0x11
 1289 00b1 13       		.uleb128 0x13
 1290 00b2 01       		.byte	0x1
 1291 00b3 03       		.uleb128 0x3
 1292 00b4 0E       		.uleb128 0xe
 1293 00b5 0B       		.uleb128 0xb
 1294 00b6 0B       		.uleb128 0xb
 1295 00b7 3A       		.uleb128 0x3a
 1296 00b8 0B       		.uleb128 0xb
 1297 00b9 3B       		.uleb128 0x3b
 1298 00ba 0B       		.uleb128 0xb
 1299 00bb 01       		.uleb128 0x1
 1300 00bc 13       		.uleb128 0x13
 1301 00bd 00       		.byte	0
 1302 00be 00       		.byte	0
 1303 00bf 12       		.uleb128 0x12
 1304 00c0 0D       		.uleb128 0xd
 1305 00c1 00       		.byte	0
 1306 00c2 03       		.uleb128 0x3
 1307 00c3 08       		.uleb128 0x8
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 36


 1308 00c4 3A       		.uleb128 0x3a
 1309 00c5 0B       		.uleb128 0xb
 1310 00c6 3B       		.uleb128 0x3b
 1311 00c7 0B       		.uleb128 0xb
 1312 00c8 49       		.uleb128 0x49
 1313 00c9 13       		.uleb128 0x13
 1314 00ca 38       		.uleb128 0x38
 1315 00cb 0B       		.uleb128 0xb
 1316 00cc 00       		.byte	0
 1317 00cd 00       		.byte	0
 1318 00ce 13       		.uleb128 0x13
 1319 00cf 2E       		.uleb128 0x2e
 1320 00d0 01       		.byte	0x1
 1321 00d1 3F       		.uleb128 0x3f
 1322 00d2 19       		.uleb128 0x19
 1323 00d3 03       		.uleb128 0x3
 1324 00d4 0E       		.uleb128 0xe
 1325 00d5 3A       		.uleb128 0x3a
 1326 00d6 0B       		.uleb128 0xb
 1327 00d7 3B       		.uleb128 0x3b
 1328 00d8 0B       		.uleb128 0xb
 1329 00d9 27       		.uleb128 0x27
 1330 00da 19       		.uleb128 0x19
 1331 00db 49       		.uleb128 0x49
 1332 00dc 13       		.uleb128 0x13
 1333 00dd 20       		.uleb128 0x20
 1334 00de 0B       		.uleb128 0xb
 1335 00df 01       		.uleb128 0x1
 1336 00e0 13       		.uleb128 0x13
 1337 00e1 00       		.byte	0
 1338 00e2 00       		.byte	0
 1339 00e3 14       		.uleb128 0x14
 1340 00e4 05       		.uleb128 0x5
 1341 00e5 00       		.byte	0
 1342 00e6 03       		.uleb128 0x3
 1343 00e7 0E       		.uleb128 0xe
 1344 00e8 3A       		.uleb128 0x3a
 1345 00e9 0B       		.uleb128 0xb
 1346 00ea 3B       		.uleb128 0x3b
 1347 00eb 0B       		.uleb128 0xb
 1348 00ec 49       		.uleb128 0x49
 1349 00ed 13       		.uleb128 0x13
 1350 00ee 00       		.byte	0
 1351 00ef 00       		.byte	0
 1352 00f0 15       		.uleb128 0x15
 1353 00f1 2E       		.uleb128 0x2e
 1354 00f2 01       		.byte	0x1
 1355 00f3 3F       		.uleb128 0x3f
 1356 00f4 19       		.uleb128 0x19
 1357 00f5 03       		.uleb128 0x3
 1358 00f6 0E       		.uleb128 0xe
 1359 00f7 3A       		.uleb128 0x3a
 1360 00f8 0B       		.uleb128 0xb
 1361 00f9 3B       		.uleb128 0x3b
 1362 00fa 05       		.uleb128 0x5
 1363 00fb 27       		.uleb128 0x27
 1364 00fc 19       		.uleb128 0x19
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 37


 1365 00fd 49       		.uleb128 0x49
 1366 00fe 13       		.uleb128 0x13
 1367 00ff 20       		.uleb128 0x20
 1368 0100 0B       		.uleb128 0xb
 1369 0101 01       		.uleb128 0x1
 1370 0102 13       		.uleb128 0x13
 1371 0103 00       		.byte	0
 1372 0104 00       		.byte	0
 1373 0105 16       		.uleb128 0x16
 1374 0106 05       		.uleb128 0x5
 1375 0107 00       		.byte	0
 1376 0108 03       		.uleb128 0x3
 1377 0109 0E       		.uleb128 0xe
 1378 010a 3A       		.uleb128 0x3a
 1379 010b 0B       		.uleb128 0xb
 1380 010c 3B       		.uleb128 0x3b
 1381 010d 05       		.uleb128 0x5
 1382 010e 49       		.uleb128 0x49
 1383 010f 13       		.uleb128 0x13
 1384 0110 00       		.byte	0
 1385 0111 00       		.byte	0
 1386 0112 17       		.uleb128 0x17
 1387 0113 34       		.uleb128 0x34
 1388 0114 00       		.byte	0
 1389 0115 03       		.uleb128 0x3
 1390 0116 08       		.uleb128 0x8
 1391 0117 3A       		.uleb128 0x3a
 1392 0118 0B       		.uleb128 0xb
 1393 0119 3B       		.uleb128 0x3b
 1394 011a 05       		.uleb128 0x5
 1395 011b 49       		.uleb128 0x49
 1396 011c 13       		.uleb128 0x13
 1397 011d 00       		.byte	0
 1398 011e 00       		.byte	0
 1399 011f 18       		.uleb128 0x18
 1400 0120 34       		.uleb128 0x34
 1401 0121 00       		.byte	0
 1402 0122 03       		.uleb128 0x3
 1403 0123 0E       		.uleb128 0xe
 1404 0124 3A       		.uleb128 0x3a
 1405 0125 0B       		.uleb128 0xb
 1406 0126 3B       		.uleb128 0x3b
 1407 0127 05       		.uleb128 0x5
 1408 0128 49       		.uleb128 0x49
 1409 0129 13       		.uleb128 0x13
 1410 012a 00       		.byte	0
 1411 012b 00       		.byte	0
 1412 012c 19       		.uleb128 0x19
 1413 012d 0B       		.uleb128 0xb
 1414 012e 01       		.byte	0x1
 1415 012f 00       		.byte	0
 1416 0130 00       		.byte	0
 1417 0131 1A       		.uleb128 0x1a
 1418 0132 2E       		.uleb128 0x2e
 1419 0133 01       		.byte	0x1
 1420 0134 3F       		.uleb128 0x3f
 1421 0135 19       		.uleb128 0x19
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 38


 1422 0136 03       		.uleb128 0x3
 1423 0137 0E       		.uleb128 0xe
 1424 0138 3A       		.uleb128 0x3a
 1425 0139 0B       		.uleb128 0xb
 1426 013a 3B       		.uleb128 0x3b
 1427 013b 0B       		.uleb128 0xb
 1428 013c 27       		.uleb128 0x27
 1429 013d 19       		.uleb128 0x19
 1430 013e 11       		.uleb128 0x11
 1431 013f 01       		.uleb128 0x1
 1432 0140 12       		.uleb128 0x12
 1433 0141 06       		.uleb128 0x6
 1434 0142 40       		.uleb128 0x40
 1435 0143 18       		.uleb128 0x18
 1436 0144 9642     		.uleb128 0x2116
 1437 0146 19       		.uleb128 0x19
 1438 0147 01       		.uleb128 0x1
 1439 0148 13       		.uleb128 0x13
 1440 0149 00       		.byte	0
 1441 014a 00       		.byte	0
 1442 014b 1B       		.uleb128 0x1b
 1443 014c 05       		.uleb128 0x5
 1444 014d 00       		.byte	0
 1445 014e 03       		.uleb128 0x3
 1446 014f 08       		.uleb128 0x8
 1447 0150 3A       		.uleb128 0x3a
 1448 0151 0B       		.uleb128 0xb
 1449 0152 3B       		.uleb128 0x3b
 1450 0153 0B       		.uleb128 0xb
 1451 0154 49       		.uleb128 0x49
 1452 0155 13       		.uleb128 0x13
 1453 0156 02       		.uleb128 0x2
 1454 0157 17       		.uleb128 0x17
 1455 0158 00       		.byte	0
 1456 0159 00       		.byte	0
 1457 015a 1C       		.uleb128 0x1c
 1458 015b 34       		.uleb128 0x34
 1459 015c 00       		.byte	0
 1460 015d 03       		.uleb128 0x3
 1461 015e 0E       		.uleb128 0xe
 1462 015f 3A       		.uleb128 0x3a
 1463 0160 0B       		.uleb128 0xb
 1464 0161 3B       		.uleb128 0x3b
 1465 0162 0B       		.uleb128 0xb
 1466 0163 49       		.uleb128 0x49
 1467 0164 13       		.uleb128 0x13
 1468 0165 02       		.uleb128 0x2
 1469 0166 17       		.uleb128 0x17
 1470 0167 00       		.byte	0
 1471 0168 00       		.byte	0
 1472 0169 1D       		.uleb128 0x1d
 1473 016a 34       		.uleb128 0x34
 1474 016b 00       		.byte	0
 1475 016c 03       		.uleb128 0x3
 1476 016d 0E       		.uleb128 0xe
 1477 016e 3A       		.uleb128 0x3a
 1478 016f 0B       		.uleb128 0xb
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 39


 1479 0170 3B       		.uleb128 0x3b
 1480 0171 0B       		.uleb128 0xb
 1481 0172 49       		.uleb128 0x49
 1482 0173 13       		.uleb128 0x13
 1483 0174 00       		.byte	0
 1484 0175 00       		.byte	0
 1485 0176 1E       		.uleb128 0x1e
 1486 0177 1D       		.uleb128 0x1d
 1487 0178 01       		.byte	0x1
 1488 0179 31       		.uleb128 0x31
 1489 017a 13       		.uleb128 0x13
 1490 017b 11       		.uleb128 0x11
 1491 017c 01       		.uleb128 0x1
 1492 017d 12       		.uleb128 0x12
 1493 017e 06       		.uleb128 0x6
 1494 017f 58       		.uleb128 0x58
 1495 0180 0B       		.uleb128 0xb
 1496 0181 59       		.uleb128 0x59
 1497 0182 0B       		.uleb128 0xb
 1498 0183 01       		.uleb128 0x1
 1499 0184 13       		.uleb128 0x13
 1500 0185 00       		.byte	0
 1501 0186 00       		.byte	0
 1502 0187 1F       		.uleb128 0x1f
 1503 0188 05       		.uleb128 0x5
 1504 0189 00       		.byte	0
 1505 018a 31       		.uleb128 0x31
 1506 018b 13       		.uleb128 0x13
 1507 018c 00       		.byte	0
 1508 018d 00       		.byte	0
 1509 018e 20       		.uleb128 0x20
 1510 018f 0B       		.uleb128 0xb
 1511 0190 01       		.byte	0x1
 1512 0191 11       		.uleb128 0x11
 1513 0192 01       		.uleb128 0x1
 1514 0193 12       		.uleb128 0x12
 1515 0194 06       		.uleb128 0x6
 1516 0195 00       		.byte	0
 1517 0196 00       		.byte	0
 1518 0197 21       		.uleb128 0x21
 1519 0198 34       		.uleb128 0x34
 1520 0199 00       		.byte	0
 1521 019a 31       		.uleb128 0x31
 1522 019b 13       		.uleb128 0x13
 1523 019c 1C       		.uleb128 0x1c
 1524 019d 0B       		.uleb128 0xb
 1525 019e 00       		.byte	0
 1526 019f 00       		.byte	0
 1527 01a0 22       		.uleb128 0x22
 1528 01a1 34       		.uleb128 0x34
 1529 01a2 00       		.byte	0
 1530 01a3 31       		.uleb128 0x31
 1531 01a4 13       		.uleb128 0x13
 1532 01a5 02       		.uleb128 0x2
 1533 01a6 17       		.uleb128 0x17
 1534 01a7 00       		.byte	0
 1535 01a8 00       		.byte	0
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 40


 1536 01a9 23       		.uleb128 0x23
 1537 01aa 898201   		.uleb128 0x4109
 1538 01ad 00       		.byte	0
 1539 01ae 11       		.uleb128 0x11
 1540 01af 01       		.uleb128 0x1
 1541 01b0 31       		.uleb128 0x31
 1542 01b1 13       		.uleb128 0x13
 1543 01b2 00       		.byte	0
 1544 01b3 00       		.byte	0
 1545 01b4 24       		.uleb128 0x24
 1546 01b5 898201   		.uleb128 0x4109
 1547 01b8 01       		.byte	0x1
 1548 01b9 11       		.uleb128 0x11
 1549 01ba 01       		.uleb128 0x1
 1550 01bb 31       		.uleb128 0x31
 1551 01bc 13       		.uleb128 0x13
 1552 01bd 00       		.byte	0
 1553 01be 00       		.byte	0
 1554 01bf 25       		.uleb128 0x25
 1555 01c0 8A8201   		.uleb128 0x410a
 1556 01c3 00       		.byte	0
 1557 01c4 02       		.uleb128 0x2
 1558 01c5 18       		.uleb128 0x18
 1559 01c6 9142     		.uleb128 0x2111
 1560 01c8 18       		.uleb128 0x18
 1561 01c9 00       		.byte	0
 1562 01ca 00       		.byte	0
 1563 01cb 26       		.uleb128 0x26
 1564 01cc 34       		.uleb128 0x34
 1565 01cd 00       		.byte	0
 1566 01ce 03       		.uleb128 0x3
 1567 01cf 0E       		.uleb128 0xe
 1568 01d0 3A       		.uleb128 0x3a
 1569 01d1 0B       		.uleb128 0xb
 1570 01d2 3B       		.uleb128 0x3b
 1571 01d3 0B       		.uleb128 0xb
 1572 01d4 49       		.uleb128 0x49
 1573 01d5 13       		.uleb128 0x13
 1574 01d6 3F       		.uleb128 0x3f
 1575 01d7 19       		.uleb128 0x19
 1576 01d8 3C       		.uleb128 0x3c
 1577 01d9 19       		.uleb128 0x19
 1578 01da 00       		.byte	0
 1579 01db 00       		.byte	0
 1580 01dc 27       		.uleb128 0x27
 1581 01dd 34       		.uleb128 0x34
 1582 01de 00       		.byte	0
 1583 01df 03       		.uleb128 0x3
 1584 01e0 0E       		.uleb128 0xe
 1585 01e1 3A       		.uleb128 0x3a
 1586 01e2 0B       		.uleb128 0xb
 1587 01e3 3B       		.uleb128 0x3b
 1588 01e4 05       		.uleb128 0x5
 1589 01e5 49       		.uleb128 0x49
 1590 01e6 13       		.uleb128 0x13
 1591 01e7 3F       		.uleb128 0x3f
 1592 01e8 19       		.uleb128 0x19
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 41


 1593 01e9 3C       		.uleb128 0x3c
 1594 01ea 19       		.uleb128 0x19
 1595 01eb 00       		.byte	0
 1596 01ec 00       		.byte	0
 1597 01ed 28       		.uleb128 0x28
 1598 01ee 35       		.uleb128 0x35
 1599 01ef 00       		.byte	0
 1600 01f0 49       		.uleb128 0x49
 1601 01f1 13       		.uleb128 0x13
 1602 01f2 00       		.byte	0
 1603 01f3 00       		.byte	0
 1604 01f4 29       		.uleb128 0x29
 1605 01f5 2E       		.uleb128 0x2e
 1606 01f6 00       		.byte	0
 1607 01f7 3F       		.uleb128 0x3f
 1608 01f8 19       		.uleb128 0x19
 1609 01f9 3C       		.uleb128 0x3c
 1610 01fa 19       		.uleb128 0x19
 1611 01fb 6E       		.uleb128 0x6e
 1612 01fc 0E       		.uleb128 0xe
 1613 01fd 03       		.uleb128 0x3
 1614 01fe 0E       		.uleb128 0xe
 1615 01ff 3A       		.uleb128 0x3a
 1616 0200 0B       		.uleb128 0xb
 1617 0201 3B       		.uleb128 0x3b
 1618 0202 05       		.uleb128 0x5
 1619 0203 00       		.byte	0
 1620 0204 00       		.byte	0
 1621 0205 2A       		.uleb128 0x2a
 1622 0206 2E       		.uleb128 0x2e
 1623 0207 00       		.byte	0
 1624 0208 3F       		.uleb128 0x3f
 1625 0209 19       		.uleb128 0x19
 1626 020a 3C       		.uleb128 0x3c
 1627 020b 19       		.uleb128 0x19
 1628 020c 6E       		.uleb128 0x6e
 1629 020d 0E       		.uleb128 0xe
 1630 020e 03       		.uleb128 0x3
 1631 020f 0E       		.uleb128 0xe
 1632 0210 3A       		.uleb128 0x3a
 1633 0211 0B       		.uleb128 0xb
 1634 0212 3B       		.uleb128 0x3b
 1635 0213 0B       		.uleb128 0xb
 1636 0214 00       		.byte	0
 1637 0215 00       		.byte	0
 1638 0216 00       		.byte	0
 1639              		.section	.debug_loc,"",%progbits
 1640              	.Ldebug_loc0:
 1641              	.LLST0:
 1642 0000 00000000 		.4byte	.LVL0
 1643 0004 34000000 		.4byte	.LVL11
 1644 0008 0100     		.2byte	0x1
 1645 000a 50       		.byte	0x50
 1646 000b 34000000 		.4byte	.LVL11
 1647 000f 42000000 		.4byte	.LVL14
 1648 0013 0400     		.2byte	0x4
 1649 0015 F3       		.byte	0xf3
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 42


 1650 0016 01       		.uleb128 0x1
 1651 0017 50       		.byte	0x50
 1652 0018 9F       		.byte	0x9f
 1653 0019 42000000 		.4byte	.LVL14
 1654 001d 44000000 		.4byte	.LVL15
 1655 0021 0100     		.2byte	0x1
 1656 0023 50       		.byte	0x50
 1657 0024 44000000 		.4byte	.LVL15
 1658 0028 70000000 		.4byte	.LFE154
 1659 002c 0400     		.2byte	0x4
 1660 002e F3       		.byte	0xf3
 1661 002f 01       		.uleb128 0x1
 1662 0030 50       		.byte	0x50
 1663 0031 9F       		.byte	0x9f
 1664 0032 00000000 		.4byte	0
 1665 0036 00000000 		.4byte	0
 1666              	.LLST1:
 1667 003a 1A000000 		.4byte	.LVL6
 1668 003e 20000000 		.4byte	.LVL8
 1669 0042 0100     		.2byte	0x1
 1670 0044 51       		.byte	0x51
 1671 0045 00000000 		.4byte	0
 1672 0049 00000000 		.4byte	0
 1673              	.LLST2:
 1674 004d 20000000 		.4byte	.LVL8
 1675 0051 24000000 		.4byte	.LVL9
 1676 0055 0100     		.2byte	0x1
 1677 0057 53       		.byte	0x53
 1678 0058 00000000 		.4byte	0
 1679 005c 00000000 		.4byte	0
 1680              	.LLST3:
 1681 0060 1C000000 		.4byte	.LVL7
 1682 0064 34000000 		.4byte	.LVL11
 1683 0068 0200     		.2byte	0x2
 1684 006a 30       		.byte	0x30
 1685 006b 9F       		.byte	0x9f
 1686 006c 34000000 		.4byte	.LVL11
 1687 0070 42000000 		.4byte	.LVL14
 1688 0074 0100     		.2byte	0x1
 1689 0076 54       		.byte	0x54
 1690 0077 42000000 		.4byte	.LVL14
 1691 007b 44000000 		.4byte	.LVL15
 1692 007f 0200     		.2byte	0x2
 1693 0081 30       		.byte	0x30
 1694 0082 9F       		.byte	0x9f
 1695 0083 44000000 		.4byte	.LVL15
 1696 0087 4E000000 		.4byte	.LVL16
 1697 008b 0100     		.2byte	0x1
 1698 008d 54       		.byte	0x54
 1699 008e 00000000 		.4byte	0
 1700 0092 00000000 		.4byte	0
 1701              	.LLST4:
 1702 0096 2C000000 		.4byte	.LVL10
 1703 009a 4E000000 		.4byte	.LVL16
 1704 009e 0100     		.2byte	0x1
 1705 00a0 55       		.byte	0x55
 1706 00a1 00000000 		.4byte	0
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 43


 1707 00a5 00000000 		.4byte	0
 1708              	.LLST5:
 1709 00a9 34000000 		.4byte	.LVL11
 1710 00ad 3D000000 		.4byte	.LVL12-1
 1711 00b1 0700     		.2byte	0x7
 1712 00b3 74       		.byte	0x74
 1713 00b4 00       		.sleb128 0
 1714 00b5 32       		.byte	0x32
 1715 00b6 24       		.byte	0x24
 1716 00b7 75       		.byte	0x75
 1717 00b8 00       		.sleb128 0
 1718 00b9 22       		.byte	0x22
 1719 00ba 00000000 		.4byte	0
 1720 00be 00000000 		.4byte	0
 1721              	.LLST6:
 1722 00c2 4E000000 		.4byte	.LVL16
 1723 00c6 5E000000 		.4byte	.LVL17
 1724 00ca 0300     		.2byte	0x3
 1725 00cc 09       		.byte	0x9
 1726 00cd FF       		.byte	0xff
 1727 00ce 9F       		.byte	0x9f
 1728 00cf 00000000 		.4byte	0
 1729 00d3 00000000 		.4byte	0
 1730              		.section	.debug_aranges,"",%progbits
 1731 0000 1C000000 		.4byte	0x1c
 1732 0004 0200     		.2byte	0x2
 1733 0006 00000000 		.4byte	.Ldebug_info0
 1734 000a 04       		.byte	0x4
 1735 000b 00       		.byte	0
 1736 000c 0000     		.2byte	0
 1737 000e 0000     		.2byte	0
 1738 0010 00000000 		.4byte	.LFB154
 1739 0014 70000000 		.4byte	.LFE154-.LFB154
 1740 0018 00000000 		.4byte	0
 1741 001c 00000000 		.4byte	0
 1742              		.section	.debug_ranges,"",%progbits
 1743              	.Ldebug_ranges0:
 1744 0000 00000000 		.4byte	.LFB154
 1745 0004 70000000 		.4byte	.LFE154
 1746 0008 00000000 		.4byte	0
 1747 000c 00000000 		.4byte	0
 1748              		.section	.debug_line,"",%progbits
 1749              	.Ldebug_line0:
 1750 0000 A6030000 		.section	.debug_str,"MS",%progbits,1
 1750      02005D03 
 1750      00000201 
 1750      FB0E0D00 
 1750      01010101 
 1751              	.LASF115:
 1752 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1752      43313120 
 1752      352E342E 
 1752      31203230 
 1752      31363036 
 1753 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1753      20726576 
 1753      6973696F 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 44


 1753      6E203233 
 1753      37373135 
 1754 0066 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1754      66756E63 
 1754      74696F6E 
 1754      2D736563 
 1754      74696F6E 
 1755              	.LASF26:
 1756 008e 4576656E 		.ascii	"EventMaskType\000"
 1756      744D6173 
 1756      6B547970 
 1756      6500
 1757              	.LASF37:
 1758 009c 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 1758      52524F52 
 1758      5F425546 
 1758      4645525F 
 1758      46554C4C 
 1759              	.LASF74:
 1760 00b1 6F6E4572 		.ascii	"onErrorTaskCount\000"
 1760      726F7254 
 1760      61736B43 
 1760      6F756E74 
 1760      00
 1761              	.LASF43:
 1762 00c2 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 1762      52524F52 
 1762      5F524541 
 1762      445F4F4E 
 1762      4C5900
 1763              	.LASF29:
 1764 00d5 52435F53 		.ascii	"RC_SUCCESS\000"
 1764      55434345 
 1764      535300
 1765              	.LASF66:
 1766 00e0 53435F53 		.ascii	"SC_SPEED_driverOut_t\000"
 1766      50454544 
 1766      5F647269 
 1766      7665724F 
 1766      75745F74 
 1767              	.LASF71:
 1768 00f5 65764F6E 		.ascii	"evOnError\000"
 1768      4572726F 
 1768      7200
 1769              	.LASF17:
 1770 00ff 63686172 		.ascii	"char\000"
 1770      00
 1771              	.LASF44:
 1772 0104 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 1772      52524F52 
 1772      5F575249 
 1772      54455F4F 
 1772      4E4C5900 
 1773              	.LASF2:
 1774 0118 73686F72 		.ascii	"short int\000"
 1774      7420696E 
 1774      7400
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 45


 1775              	.LASF18:
 1776 0122 73697A65 		.ascii	"size_t\000"
 1776      5F7400
 1777              	.LASF47:
 1778 0129 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 1778      52524F52 
 1778      5F575249 
 1778      54455F46 
 1778      41494C53 
 1779              	.LASF27:
 1780 013e 73697A65 		.ascii	"sizetype\000"
 1780      74797065 
 1780      00
 1781              	.LASF55:
 1782 0147 52435F74 		.ascii	"RC_t\000"
 1782      00
 1783              	.LASF67:
 1784 014c 73706565 		.ascii	"speed_value\000"
 1784      645F7661 
 1784      6C756500 
 1785              	.LASF109:
 1786 0158 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 1786      52515F6E 
 1786      65737469 
 1786      6E675F6C 
 1786      6576656C 
 1787              	.LASF101:
 1788 016d 7461736B 		.ascii	"task\000"
 1788      00
 1789              	.LASF94:
 1790 0172 5254455F 		.ascii	"RTE_SC_SPEED_get\000"
 1790      53435F53 
 1790      50454544 
 1790      5F676574 
 1790      00
 1791              	.LASF32:
 1792 0183 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 1792      52524F52 
 1792      5F5A4552 
 1792      4F00
 1793              	.LASF23:
 1794 0191 45455F46 		.ascii	"EE_FREG\000"
 1794      52454700 
 1795              	.LASF46:
 1796 0199 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 1796      52524F52 
 1796      5F524541 
 1796      445F4641 
 1796      494C5300 
 1797              	.LASF7:
 1798 01ad 5F5F7569 		.ascii	"__uint32_t\000"
 1798      6E743332 
 1798      5F7400
 1799              	.LASF21:
 1800 01b8 45455F55 		.ascii	"EE_UINT32\000"
 1800      494E5433 
 1800      3200
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 46


 1801              	.LASF24:
 1802 01c2 45455F54 		.ascii	"EE_TID\000"
 1802      494400
 1803              	.LASF81:
 1804 01c9 76616C75 		.ascii	"value\000"
 1804      6500
 1805              	.LASF91:
 1806 01cf 53435F45 		.ascii	"SC_ENGINE_s\000"
 1806      4E47494E 
 1806      455F7300 
 1807              	.LASF64:
 1808 01db 53435F53 		.ascii	"SC_SPEED_data_t\000"
 1808      50454544 
 1808      5F646174 
 1808      615F7400 
 1809              	.LASF52:
 1810 01eb 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 1810      52524F52 
 1810      5F494E56 
 1810      414C4944 
 1810      5F535441 
 1811              	.LASF79:
 1812 0202 53435F53 		.ascii	"SC_SPEED_cfg_s\000"
 1812      50454544 
 1812      5F636667 
 1812      5F7300
 1813              	.LASF78:
 1814 0211 53435F53 		.ascii	"SC_SPEED_cfg_t\000"
 1814      50454544 
 1814      5F636667 
 1814      5F7400
 1815              	.LASF77:
 1816 0220 7265736F 		.ascii	"resource\000"
 1816      75726365 
 1816      00
 1817              	.LASF98:
 1818 0229 5254455F 		.ascii	"RTE_SC_ENGINE_set\000"
 1818      53435F45 
 1818      4E47494E 
 1818      455F7365 
 1818      7400
 1819              	.LASF108:
 1820 023b 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 1820      74645F65 
 1820      6E646379 
 1820      636C655F 
 1820      6E657874 
 1821              	.LASF34:
 1822 0254 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 1822      52524F52 
 1822      5F52414E 
 1822      474500
 1823              	.LASF15:
 1824 0263 666C6F61 		.ascii	"float\000"
 1824      7400
 1825              	.LASF111:
 1826 0269 534F5F53 		.ascii	"SO_SPEED_signal\000"
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 47


 1826      50454544 
 1826      5F736967 
 1826      6E616C00 
 1827              	.LASF54:
 1828 0279 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 1828      52524F52 
 1828      5F4E4F54 
 1828      5F494D50 
 1828      4C454D45 
 1829              	.LASF9:
 1830 0292 6C6F6E67 		.ascii	"long long int\000"
 1830      206C6F6E 
 1830      6720696E 
 1830      7400
 1831              	.LASF106:
 1832 02a0 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 1832      6F5F4952 
 1832      515F7375 
 1832      7370656E 
 1832      645F7374 
 1833              	.LASF117:
 1834 02b9 443A5C68 		.ascii	"D:\\h_da\\sem2\\eaa\\gasPedal\\A1_GasPedal\\A1_GasP"
 1834      5F64615C 
 1834      73656D32 
 1834      5C656161 
 1834      5C676173 
 1835 02e6 6564616C 		.ascii	"edal\\Design01.cydsn\000"
 1835      5C446573 
 1835      69676E30 
 1835      312E6379 
 1835      64736E00 
 1836              	.LASF48:
 1837 02fa 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 1837      52524F52 
 1837      5F4E4F54 
 1837      5F4D4154 
 1837      434800
 1838              	.LASF53:
 1839 030d 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 1839      52524F52 
 1839      5F554E4B 
 1839      4E4F574E 
 1839      00
 1840              	.LASF63:
 1841 031e 5254455F 		.ascii	"RTE_signalStatus_t\000"
 1841      7369676E 
 1841      616C5374 
 1841      61747573 
 1841      5F7400
 1842              	.LASF6:
 1843 0331 6C6F6E67 		.ascii	"long int\000"
 1843      20696E74 
 1843      00
 1844              	.LASF36:
 1845 033a 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 1845      52524F52 
 1845      5F554E44 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 48


 1845      45525255 
 1845      4E00
 1846              	.LASF97:
 1847 034c 5254455F 		.ascii	"RTE_SC_ENGINE_pushPort\000"
 1847      53435F45 
 1847      4E47494E 
 1847      455F7075 
 1847      7368506F 
 1848              	.LASF116:
 1849 0363 736F7572 		.ascii	"source\\asw\\swc_engine.c\000"
 1849      63655C61 
 1849      73775C73 
 1849      77635F65 
 1849      6E67696E 
 1850              	.LASF39:
 1851 037b 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 1851      52524F52 
 1851      5F425553 
 1851      5900
 1852              	.LASF59:
 1853 0389 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 1853      5349474E 
 1853      414C5354 
 1853      41545553 
 1853      5F535441 
 1854              	.LASF85:
 1855 03a2 656E6769 		.ascii	"engine_value\000"
 1855      6E655F76 
 1855      616C7565 
 1855      00
 1856              	.LASF45:
 1857 03af 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 1857      52524F52 
 1857      5F494E56 
 1857      414C4944 
 1857      00
 1858              	.LASF89:
 1859 03c0 53435F45 		.ascii	"SC_ENGINE_cfg_s\000"
 1859      4E47494E 
 1859      455F6366 
 1859      675F7300 
 1860              	.LASF90:
 1861 03d0 53435F45 		.ascii	"SC_ENGINE_cfg_t\000"
 1861      4E47494E 
 1861      455F6366 
 1861      675F7400 
 1862              	.LASF50:
 1863 03e0 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 1863      52524F52 
 1863      5F424144 
 1863      5F444154 
 1863      4100
 1864              	.LASF28:
 1865 03f2 626F6F6C 		.ascii	"boolean_t\000"
 1865      65616E5F 
 1865      7400
 1866              	.LASF69:
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 49


 1867 03fc 6F757444 		.ascii	"outDriver\000"
 1867      72697665 
 1867      7200
 1868              	.LASF100:
 1869 0406 70546173 		.ascii	"pTaskArray\000"
 1869      6B417272 
 1869      617900
 1870              	.LASF19:
 1871 0411 6C6F6E67 		.ascii	"long double\000"
 1871      20646F75 
 1871      626C6500 
 1872              	.LASF99:
 1873 041d 7461736B 		.ascii	"taskNum\000"
 1873      4E756D00 
 1874              	.LASF25:
 1875 0425 5461736B 		.ascii	"TaskType\000"
 1875      54797065 
 1875      00
 1876              	.LASF1:
 1877 042e 756E7369 		.ascii	"unsigned char\000"
 1877      676E6564 
 1877      20636861 
 1877      7200
 1878              	.LASF102:
 1879 043c 73706565 		.ascii	"speed_age\000"
 1879      645F6167 
 1879      6500
 1880              	.LASF104:
 1881 0446 656E6769 		.ascii	"engine\000"
 1881      6E6500
 1882              	.LASF0:
 1883 044d 7369676E 		.ascii	"signed char\000"
 1883      65642063 
 1883      68617200 
 1884              	.LASF10:
 1885 0459 6C6F6E67 		.ascii	"long long unsigned int\000"
 1885      206C6F6E 
 1885      6720756E 
 1885      7369676E 
 1885      65642069 
 1886              	.LASF14:
 1887 0470 75696E74 		.ascii	"uint32_t\000"
 1887      33325F74 
 1887      00
 1888              	.LASF11:
 1889 0479 756E7369 		.ascii	"unsigned int\000"
 1889      676E6564 
 1889      20696E74 
 1889      00
 1890              	.LASF41:
 1891 0486 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 1891      52524F52 
 1891      5F4F5045 
 1891      4E00
 1892              	.LASF103:
 1893 0494 73706565 		.ascii	"speed\000"
 1893      6400
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 50


 1894              	.LASF31:
 1895 049a 52435F45 		.ascii	"RC_ERROR_NULL\000"
 1895      52524F52 
 1895      5F4E554C 
 1895      4C00
 1896              	.LASF38:
 1897 04a8 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 1897      52524F52 
 1897      5F425546 
 1897      4645525F 
 1897      454D5450 
 1898              	.LASF20:
 1899 04be 45455F49 		.ascii	"EE_INT32\000"
 1899      4E543332 
 1899      00
 1900              	.LASF83:
 1901 04c7 70536967 		.ascii	"pSigCfg\000"
 1901      43666700 
 1902              	.LASF70:
 1903 04cf 65764F6E 		.ascii	"evOnUpdate\000"
 1903      55706461 
 1903      746500
 1904              	.LASF82:
 1905 04da 73746174 		.ascii	"status\000"
 1905      757300
 1906              	.LASF76:
 1907 04e1 7265736F 		.ascii	"resourceActive\000"
 1907      75726365 
 1907      41637469 
 1907      766500
 1908              	.LASF95:
 1909 04f0 7369676E 		.ascii	"signal\000"
 1909      616C00
 1910              	.LASF92:
 1911 04f7 53435F45 		.ascii	"SC_ENGINE_t\000"
 1911      4E47494E 
 1911      455F7400 
 1912              	.LASF62:
 1913 0503 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 1913      5349474E 
 1913      414C5354 
 1913      41545553 
 1913      5F494E56 
 1914              	.LASF86:
 1915 051c 53435F45 		.ascii	"SC_ENGINE_data_t\000"
 1915      4E47494E 
 1915      455F6461 
 1915      74615F74 
 1915      00
 1916              	.LASF13:
 1917 052d 696E7433 		.ascii	"int32_t\000"
 1917      325F7400 
 1918              	.LASF3:
 1919 0535 73686F72 		.ascii	"short unsigned int\000"
 1919      7420756E 
 1919      7369676E 
 1919      65642069 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 51


 1919      6E7400
 1920              	.LASF93:
 1921 0548 5254455F 		.ascii	"RTE_SC_SPEED_getStatus\000"
 1921      53435F53 
 1921      50454544 
 1921      5F676574 
 1921      53746174 
 1922              	.LASF49:
 1923 055f 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 1923      52524F52 
 1923      5F424144 
 1923      5F504152 
 1923      414D00
 1924              	.LASF75:
 1925 0572 6F6E4572 		.ascii	"onErrorTasks\000"
 1925      726F7254 
 1925      61736B73 
 1925      00
 1926              	.LASF72:
 1927 057f 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 1927      64617465 
 1927      5461736B 
 1927      436F756E 
 1927      7400
 1928              	.LASF107:
 1929 0591 45455F41 		.ascii	"EE_ApplicationMode\000"
 1929      70706C69 
 1929      63617469 
 1929      6F6E4D6F 
 1929      646500
 1930              	.LASF8:
 1931 05a4 6C6F6E67 		.ascii	"long unsigned int\000"
 1931      20756E73 
 1931      69676E65 
 1931      6420696E 
 1931      7400
 1932              	.LASF88:
 1933 05b6 53435F45 		.ascii	"SC_ENGINE_driverOut_t\000"
 1933      4E47494E 
 1933      455F6472 
 1933      69766572 
 1933      4F75745F 
 1934              	.LASF73:
 1935 05cc 6F6E5570 		.ascii	"onUpdateTasks\000"
 1935      64617465 
 1935      5461736B 
 1935      7300
 1936              	.LASF42:
 1937 05da 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 1937      52524F52 
 1937      5F434845 
 1937      434B5355 
 1937      4D00
 1938              	.LASF22:
 1939 05ec 45455F55 		.ascii	"EE_UREG\000"
 1939      52454700 
 1940              	.LASF118:
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 52


 1941 05f4 454E4749 		.ascii	"ENGINE_set_engine_run\000"
 1941      4E455F73 
 1941      65745F65 
 1941      6E67696E 
 1941      655F7275 
 1942              	.LASF35:
 1943 060a 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 1943      52524F52 
 1943      5F4F5645 
 1943      5252554E 
 1943      00
 1944              	.LASF112:
 1945 061b 534F5F45 		.ascii	"SO_ENGINE_signal\000"
 1945      4E47494E 
 1945      455F7369 
 1945      676E616C 
 1945      00
 1946              	.LASF5:
 1947 062c 5F5F696E 		.ascii	"__int32_t\000"
 1947      7433325F 
 1947      7400
 1948              	.LASF12:
 1949 0636 75696E74 		.ascii	"uint8_t\000"
 1949      385F7400 
 1950              	.LASF57:
 1951 063e 5254455F 		.ascii	"RTE_event\000"
 1951      6576656E 
 1951      7400
 1952              	.LASF96:
 1953 0648 5254455F 		.ascii	"RTE_SC_SPEED_getAge\000"
 1953      53435F53 
 1953      50454544 
 1953      5F676574 
 1953      41676500 
 1954              	.LASF65:
 1955 065c 53435F53 		.ascii	"SC_SPEED_driverIn_t\000"
 1955      50454544 
 1955      5F647269 
 1955      76657249 
 1955      6E5F7400 
 1956              	.LASF80:
 1957 0670 53435F53 		.ascii	"SC_SPEED_s\000"
 1957      50454544 
 1957      5F7300
 1958              	.LASF51:
 1959 067b 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 1959      52524F52 
 1959      5F43414E 
 1959      43454C45 
 1959      4400
 1960              	.LASF84:
 1961 068d 53435F53 		.ascii	"SC_SPEED_t\000"
 1961      50454544 
 1961      5F7400
 1962              	.LASF58:
 1963 0698 5265736F 		.ascii	"ResourceType\000"
 1963      75726365 
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 53


 1963      54797065 
 1963      00
 1964              	.LASF16:
 1965 06a5 646F7562 		.ascii	"double\000"
 1965      6C6500
 1966              	.LASF87:
 1967 06ac 53435F45 		.ascii	"SC_ENGINE_driverIn_t\000"
 1967      4E47494E 
 1967      455F6472 
 1967      69766572 
 1967      496E5F74 
 1968              	.LASF61:
 1969 06c1 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 1969      5349474E 
 1969      414C5354 
 1969      41545553 
 1969      5F56414C 
 1970              	.LASF113:
 1971 06d8 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 1971      6F5F5365 
 1971      74457665 
 1971      6E7400
 1972              	.LASF68:
 1973 06e7 696E4472 		.ascii	"inDriver\000"
 1973      69766572 
 1973      00
 1974              	.LASF110:
 1975 06f0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1975      52784275 
 1975      66666572 
 1975      00
 1976              	.LASF30:
 1977 06fd 52435F45 		.ascii	"RC_ERROR\000"
 1977      52524F52 
 1977      00
 1978              	.LASF33:
 1979 0706 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 1979      52524F52 
 1979      5F4D454D 
 1979      4F525900 
 1980              	.LASF114:
 1981 0716 57445F41 		.ascii	"WD_Alive\000"
 1981      6C697665 
 1981      00
 1982              	.LASF56:
 1983 071f 5461736B 		.ascii	"TaskTypeArray\000"
 1983      54797065 
 1983      41727261 
 1983      7900
 1984              	.LASF105:
 1985 072d 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 1985      6F5F4952 
 1985      515F6469 
 1985      7361626C 
 1985      655F636F 
 1986              	.LASF4:
 1987 0745 5F5F7569 		.ascii	"__uint8_t\000"
ARM GAS  C:\Users\saman\AppData\Local\Temp\ccHbNeFw.s 			page 54


 1987      6E74385F 
 1987      7400
 1988              	.LASF60:
 1989 074f 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 1989      5349474E 
 1989      414C5354 
 1989      41545553 
 1989      5F494E49 
 1990              	.LASF40:
 1991 076c 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 1991      52524F52 
 1991      5F54494D 
 1991      455F4F55 
 1991      5400
 1992              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
